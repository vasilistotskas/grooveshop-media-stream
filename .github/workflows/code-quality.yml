name: Code Quality and Security

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  trivy-scan:
    name: Trivy Docker Image Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: grooveshop-media-stream:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production
          build-args: |
            NODE_VERSION=23.10.0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: grooveshop-media-stream:test
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack for pnpm
        run: corepack enable pnpm

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
          cache: 'pnpm'
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run end-to-end tests
        run: pnpm run test:e2e
