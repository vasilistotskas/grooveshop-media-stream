{"version":3,"sources":["../../../../../src/MediaStream/API/Controller/MediaStreamImageRESTController.ts"],"sourcesContent":["import { Response } from 'express'\r\nimport { createReadStream } from 'fs'\r\nimport { HttpService } from '@nestjs/axios'\r\nimport { Controller, Get, Param, Res, Scope, Logger, InternalServerErrorException } from '@nestjs/common'\r\nimport ResourceMetaData from '@microservice/DTO/ResourceMetaData'\r\nimport { IMAGE, VERSION } from '@microservice/Constant/RoutePrefixes'\r\nimport CacheImageResourceOperation from '@microservice/Operation/CacheImageResourceOperation'\r\nimport CacheImageRequest, {\r\n\tBackgroundOptions,\r\n\tFitOptions,\r\n\tPositionOptions,\r\n\tResizeOptions,\r\n\tSupportedResizeFormats\r\n} from '@microservice/API/DTO/CacheImageRequest'\r\nimport GenerateResourceIdentityFromRequestJob from '@microservice/Job/GenerateResourceIdentityFromRequestJob'\r\nimport * as process from 'process'\r\n\r\n@Controller({\r\n\tpath: IMAGE,\r\n\tversion: VERSION,\r\n\tscope: Scope.REQUEST\r\n})\r\nexport default class MediaStreamImageRESTController {\r\n\tprivate readonly logger = new Logger(MediaStreamImageRESTController.name)\r\n\r\n\tconstructor(\r\n\t\tprivate readonly httpService: HttpService,\r\n\t\tprivate readonly generateResourceIdentityFromRequestJob: GenerateResourceIdentityFromRequestJob,\r\n\t\tprivate readonly cacheImageResourceOperation: CacheImageResourceOperation\r\n\t) {}\r\n\r\n\t/**\r\n\t * Adds required headers to the response\r\n\t *\r\n\t * @param res\r\n\t * @param headers\r\n\t * @protected\r\n\t */\r\n\tprotected static addHeadersToRequest(res: Response, headers: ResourceMetaData): Response {\r\n\t\tconst expiresAt = Date.now() + headers.publicTTL\r\n\t\treturn res\r\n\t\t\t.header('Content-Type', `image/${headers.format}`)\r\n\t\t\t.header('Content-Length', headers.size.toString())\r\n\t\t\t.header('Cache-Control', `max-age=${headers.publicTTL / 1000}, public`)\r\n\t\t\t.header('Expires', new Date(expiresAt).toUTCString())\r\n\t}\r\n\r\n\t/**\r\n\t * Streams the resource from the cacheImageResourceOperation\r\n\t *\r\n\t * @param request\r\n\t * @param res\r\n\t * @protected\r\n\t */\r\n\tprivate async streamRequestedResource(request: CacheImageRequest, res: Response): Promise<void> {\r\n\t\tawait this.cacheImageResourceOperation.setup(request)\r\n\t\tif (this.cacheImageResourceOperation.resourceExists) {\r\n\t\t\tconst headers = this.cacheImageResourceOperation.getHeaders\r\n\t\t\tres = MediaStreamImageRESTController.addHeadersToRequest(res, headers)\r\n\t\t\tconst stream = createReadStream(this.cacheImageResourceOperation.getResourcePath).pipe(res)\r\n\t\t\ttry {\r\n\t\t\t\tawait new Promise((resolve, reject) => {\r\n\t\t\t\t\tstream.on('finish', () => resolve)\r\n\t\t\t\t\tstream.on('error', () => reject)\r\n\t\t\t\t})\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// ignore failed stream to client for now\r\n\t\t\t\tthis.logger.error(e)\r\n\t\t\t} finally {\r\n\t\t\t\tawait this.cacheImageResourceOperation.execute()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.cacheImageResourceOperation.execute()\r\n\t\t\t\tconst headers = this.cacheImageResourceOperation.getHeaders\r\n\t\t\t\tres = MediaStreamImageRESTController.addHeadersToRequest(res, headers)\r\n\t\t\t\tcreateReadStream(this.cacheImageResourceOperation.getResourcePath).pipe(res)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.logger.warn(e)\r\n\t\t\t\tawait this.defaultImageFallback(request, res)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async defaultImageFallback(request: CacheImageRequest, res: Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst optimizedDefaultImagePath = await this.cacheImageResourceOperation.optimizeAndServeDefaultImage(\r\n\t\t\t\trequest.resizeOptions\r\n\t\t\t)\r\n\t\t\tres.sendFile(optimizedDefaultImagePath)\r\n\t\t} catch (defaultImageError) {\r\n\t\t\tthis.logger.error('Failed to serve default image', defaultImageError)\r\n\t\t\tthrow new InternalServerErrorException('Failed to process the image request.')\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static resourceTargetPrepare(resourceTarget: string): string {\r\n\t\treturn resourceTarget\r\n\t}\r\n\r\n\t@Get(\r\n\t\t'media/uploads/:imageType/:image/:width?/:height?/:fit?/:position?/:background?/:trimThreshold?/:format?/:quality?'\r\n\t)\r\n\tpublic async uploadedImage(\r\n\t\t@Param('imageType') imageType: string,\r\n\t\t@Param('image') image: string,\r\n\t\t@Param('width') width: number = null,\r\n\t\t@Param('height') height: number = null,\r\n\t\t@Param('fit') fit: FitOptions = FitOptions.contain,\r\n\t\t@Param('position') position = PositionOptions.entropy,\r\n\t\t@Param('background') background = BackgroundOptions.transparent,\r\n\t\t@Param('trimThreshold') trimThreshold = 5,\r\n\t\t@Param('format') format: SupportedResizeFormats = SupportedResizeFormats.webp,\r\n\t\t@Param('quality') quality = 100,\r\n\t\t@Res() res: Response\r\n\t): Promise<void> {\r\n\t\tconst resizeOptions = new ResizeOptions({\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tposition,\r\n\t\t\tbackground,\r\n\t\t\tfit,\r\n\t\t\ttrimThreshold,\r\n\t\t\tformat,\r\n\t\t\tquality\r\n\t\t})\r\n\t\tconst djangoApiUrl = process.env.NEST_PUBLIC_DJANGO_URL || 'http://localhost:8000'\r\n\t\tconst request = new CacheImageRequest({\r\n\t\t\tresourceTarget: MediaStreamImageRESTController.resourceTargetPrepare(\r\n\t\t\t\t`${djangoApiUrl}/media/uploads/${imageType}/${image}`\r\n\t\t\t),\r\n\t\t\tresizeOptions: resizeOptions\r\n\t\t})\r\n\t\tawait this.streamRequestedResource(request, res)\r\n\t}\r\n\r\n\t@Get('static/images/:image/:width?/:height?/:fit?/:position?/:background?/:trimThreshold?/:format?/:quality?')\r\n\tpublic async staticImage(\r\n\t\t@Param('image') image: string,\r\n\t\t@Param('width') width: number = null,\r\n\t\t@Param('height') height: number = null,\r\n\t\t@Param('fit') fit: FitOptions = FitOptions.contain,\r\n\t\t@Param('position') position = PositionOptions.entropy,\r\n\t\t@Param('background') background = BackgroundOptions.transparent,\r\n\t\t@Param('trimThreshold') trimThreshold = 5,\r\n\t\t@Param('format') format: SupportedResizeFormats = SupportedResizeFormats.webp,\r\n\t\t@Param('quality') quality = 100,\r\n\t\t@Res() res: Response\r\n\t): Promise<void> {\r\n\t\tconst djangoApiUrl = process.env.NEST_PUBLIC_DJANGO_URL || 'http://localhost:8000'\r\n\t\tconst request = new CacheImageRequest({\r\n\t\t\tresourceTarget: MediaStreamImageRESTController.resourceTargetPrepare(`${djangoApiUrl}/static/images/${image}`),\r\n\t\t\tresizeOptions: new ResizeOptions({\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tposition,\r\n\t\t\t\tbackground,\r\n\t\t\t\tfit,\r\n\t\t\t\ttrimThreshold,\r\n\t\t\t\tformat,\r\n\t\t\t\tquality\r\n\t\t\t})\r\n\t\t})\r\n\t\tawait this.streamRequestedResource(request, res)\r\n\t}\r\n\r\n\t@Get('img/:image/:width?/:height?/:fit?/:position?/:background?/:trimThreshold?/:format?/:quality?')\r\n\tpublic async publicNuxtImage(\r\n\t\t@Param('image') image: string,\r\n\t\t@Param('width') width: number = null,\r\n\t\t@Param('height') height: number = null,\r\n\t\t@Param('fit') fit: FitOptions = FitOptions.contain,\r\n\t\t@Param('position') position = PositionOptions.entropy,\r\n\t\t@Param('background') background = BackgroundOptions.transparent,\r\n\t\t@Param('trimThreshold') trimThreshold = 5,\r\n\t\t@Param('format') format: SupportedResizeFormats = SupportedResizeFormats.webp,\r\n\t\t@Param('quality') quality = 100,\r\n\t\t@Res() res: Response\r\n\t): Promise<void> {\r\n\t\tconst nuxtPublicUrl = process.env.NEST_PUBLIC_NUXT_URL || 'http://localhost:3000'\r\n\r\n\t\tconst request = new CacheImageRequest({\r\n\t\t\tresourceTarget: MediaStreamImageRESTController.resourceTargetPrepare(`${nuxtPublicUrl}/img/${image}`),\r\n\t\t\tresizeOptions: new ResizeOptions({\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tposition,\r\n\t\t\t\tbackground,\r\n\t\t\t\tfit,\r\n\t\t\t\ttrimThreshold,\r\n\t\t\t\tformat,\r\n\t\t\t\tquality\r\n\t\t\t})\r\n\t\t})\r\n\t\tawait this.streamRequestedResource(request, res)\r\n\t}\r\n}\r\n"],"names":["MediaStreamImageRESTController","addHeadersToRequest","res","headers","expiresAt","Date","now","publicTTL","header","format","size","toString","toUTCString","streamRequestedResource","request","cacheImageResourceOperation","setup","resourceExists","getHeaders","stream","createReadStream","getResourcePath","pipe","Promise","resolve","reject","on","e","logger","error","execute","warn","defaultImageFallback","optimizedDefaultImagePath","optimizeAndServeDefaultImage","resizeOptions","sendFile","defaultImageError","InternalServerErrorException","resourceTargetPrepare","resourceTarget","uploadedImage","imageType","image","width","height","fit","FitOptions","contain","position","PositionOptions","entropy","background","BackgroundOptions","transparent","trimThreshold","SupportedResizeFormats","webp","quality","ResizeOptions","djangoApiUrl","process","env","NEST_PUBLIC_DJANGO_URL","CacheImageRequest","staticImage","publicNuxtImage","nuxtPublicUrl","NEST_PUBLIC_NUXT_URL","constructor","httpService","generateResourceIdentityFromRequestJob","Logger","name","Get","Param","Res","Controller","path","IMAGE","version","VERSION","scope","Scope","REQUEST"],"mappings":"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"}