{"version":3,"sources":["../../../../../src/MediaStream/API/dto/cache-image-request.dto.ts"],"sourcesContent":["interface RGBA {\r\n\tr?: number\r\n\tg?: number\r\n\tb?: number\r\n\talpha?: number\r\n}\r\n\r\ntype Color = string | RGBA\r\n\r\nexport enum SupportedResizeFormats {\r\n\twebp = 'webp',\r\n\tjpeg = 'jpeg',\r\n\tpng = 'png',\r\n\tgif = 'gif',\r\n\ttiff = 'tiff',\r\n\tsvg = 'svg',\r\n}\r\n\r\nexport enum PositionOptions {\r\n\tcentre = 'centre',\r\n\tcenter = 'center',\r\n\tleft = 'left',\r\n\tright = 'right',\r\n\ttop = 'top',\r\n\tbottom = 'bottom',\r\n\twest = 'west',\r\n\teast = 'east',\r\n\tnorth = 'north',\r\n\tsouth = 'south',\r\n\tnorthwest = 'northwest',\r\n\tnortheast = 'northeast',\r\n\tsouthwest = 'southwest',\r\n\tsoutheast = 'southeast',\r\n\tentropy = 'entropy',\r\n\tattention = 'attention',\r\n}\r\n\r\nexport enum BackgroundOptions {\r\n\twhite = '#FFFFFF',\r\n\tblack = '#000000',\r\n\ttransparent = 'transparent',\r\n}\r\n\r\nexport enum FitOptions {\r\n\tcontain = 'contain',\r\n\tcover = 'cover',\r\n\tfill = 'fill',\r\n\tinside = 'inside',\r\n\toutside = 'outside',\r\n}\r\n\r\nfunction parseColor(color: string): RGBA {\r\n\tif (typeof color === 'string') {\r\n\t\tif (color === 'transparent') {\r\n\t\t\treturn {\r\n\t\t\t\tr: 0,\r\n\t\t\t\tg: 0,\r\n\t\t\t\tb: 0,\r\n\t\t\t\talpha: 0,\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color[0] === '#') {\r\n\t\t\tcolor = color.slice(1)\r\n\t\t}\r\n\t\tif (color.length === 3) {\r\n\t\t\tcolor = color\r\n\t\t\t\t.split('')\r\n\t\t\t\t.map(char => char + char)\r\n\t\t\t\t.join('')\r\n\t\t}\r\n\t\tconst num = Number.parseInt(color, 16)\r\n\t\treturn {\r\n\t\t\tr: num >> 16,\r\n\t\t\tg: (num >> 8) & 255,\r\n\t\t\tb: num & 255,\r\n\t\t\talpha: 1,\r\n\t\t}\r\n\t}\r\n\treturn color as RGBA\r\n}\r\n\r\nexport class ResizeOptions {\r\n\twidth: number | null = null as any\r\n\theight: number | null = null as any\r\n\tfit = FitOptions.contain\r\n\tposition: PositionOptions | string = PositionOptions.entropy\r\n\tformat = SupportedResizeFormats.webp\r\n\tbackground: Color = BackgroundOptions.white\r\n\ttrimThreshold: null | number = null as any\r\n\tquality = 100\r\n\r\n\tconstructor(data?: Partial<ResizeOptions>) {\r\n\t\tconst { width, height, trimThreshold, background, fit, position, format, quality, ...rest } = data || {}\r\n\t\tthis.width = width ?? null\r\n\t\tthis.height = height ?? null\r\n\t\tthis.trimThreshold = trimThreshold ? Number(trimThreshold) : null\r\n\t\tthis.background = background ? parseColor(String(background)) : BackgroundOptions.white\r\n\t\tthis.fit = fit ?? FitOptions.contain\r\n\t\tthis.position = position ?? PositionOptions.entropy\r\n\t\tthis.format = format ?? SupportedResizeFormats.webp\r\n\t\tthis.quality = quality !== undefined ? Number(quality) : 100\r\n\r\n\t\tObject.assign(this, rest);\r\n\r\n\t\t(['width', 'height'] as const).forEach((sizeOption) => {\r\n\t\t\tif (data && data[sizeOption] === null) {\r\n\t\t\t\tdelete (this as any)[sizeOption]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default class CacheImageRequest {\r\n\tresourceTarget: string = ''\r\n\tttl?: number\r\n\tresizeOptions: ResizeOptions = new ResizeOptions()\r\n\r\n\tconstructor(data?: Partial<CacheImageRequest>) {\r\n\t\tObject.assign(this, data)\r\n\t}\r\n}\r\n"],"names":["SupportedResizeFormats","PositionOptions","BackgroundOptions","FitOptions","parseColor","color","r","g","b","alpha","slice","length","split","map","char","join","num","Number","parseInt","ResizeOptions","data","width","height","fit","position","format","background","trimThreshold","quality","rest","String","undefined","Object","assign","forEach","sizeOption","CacheImageRequest","resourceTarget","resizeOptions"],"mappings":"AASA,OAAO,IAAA,AAAKA,gDAAAA;;;;;;;WAAAA;MAOX;AAED,OAAO,IAAA,AAAKC,yCAAAA;;;;;;;;;;;;;;;;;WAAAA;MAiBX;AAED,OAAO,IAAA,AAAKC,2CAAAA;;;;WAAAA;MAIX;AAED,OAAO,IAAA,AAAKC,oCAAAA;;;;;;WAAAA;MAMX;AAED,SAASC,WAAWC,KAAa;IAChC,IAAI,OAAOA,UAAU,UAAU;QAC9B,IAAIA,UAAU,eAAe;YAC5B,OAAO;gBACNC,GAAG;gBACHC,GAAG;gBACHC,GAAG;gBACHC,OAAO;YACR;QACD;QACA,IAAIJ,KAAK,CAAC,EAAE,KAAK,KAAK;YACrBA,QAAQA,MAAMK,KAAK,CAAC;QACrB;QACA,IAAIL,MAAMM,MAAM,KAAK,GAAG;YACvBN,QAAQA,MACNO,KAAK,CAAC,IACNC,GAAG,CAACC,CAAAA,OAAQA,OAAOA,MACnBC,IAAI,CAAC;QACR;QACA,MAAMC,MAAMC,OAAOC,QAAQ,CAACb,OAAO;QACnC,OAAO;YACNC,GAAGU,OAAO;YACVT,GAAG,AAACS,OAAO,IAAK;YAChBR,GAAGQ,MAAM;YACTP,OAAO;QACR;IACD;IACA,OAAOJ;AACR;AAEA,OAAO,MAAMc;IAUZ,YAAYC,IAA6B,CAAE;aAT3CC,QAAuB;aACvBC,SAAwB;aACxBC;aACAC;aACAC;aACAC;aACAC,gBAA+B;aAC/BC,UAAU;QAGT,MAAM,EAAEP,KAAK,EAAEC,MAAM,EAAEK,aAAa,EAAED,UAAU,EAAEH,GAAG,EAAEC,QAAQ,EAAEC,MAAM,EAAEG,OAAO,EAAE,GAAGC,MAAM,GAAGT,QAAQ,CAAC;QACvG,IAAI,CAACC,KAAK,GAAGA,SAAS;QACtB,IAAI,CAACC,MAAM,GAAGA,UAAU;QACxB,IAAI,CAACK,aAAa,GAAGA,gBAAgBV,OAAOU,iBAAiB;QAC7D,IAAI,CAACD,UAAU,GAAGA,aAAatB,WAAW0B,OAAOJ;QACjD,IAAI,CAACH,GAAG,GAAGA;QACX,IAAI,CAACC,QAAQ,GAAGA;QAChB,IAAI,CAACC,MAAM,GAAGA;QACd,IAAI,CAACG,OAAO,GAAGA,YAAYG,YAAYd,OAAOW,WAAW;QAEzDI,OAAOC,MAAM,CAAC,IAAI,EAAEJ;QAEnB;YAAC;YAAS;SAAS,CAAWK,OAAO,CAAC,CAACC;YACvC,IAAIf,QAAQA,IAAI,CAACe,WAAW,KAAK,MAAM;gBACtC,OAAO,AAAC,IAAI,AAAQ,CAACA,WAAW;YACjC;QACD;IACD;AACD;AAEe,IAAA,AAAMC,oBAAN,MAAMA;IAKpB,YAAYhB,IAAiC,CAAE;aAJ/CiB,iBAAyB;aAEzBC,gBAA+B,IAAInB;QAGlCa,OAAOC,MAAM,CAAC,IAAI,EAAEb;IACrB;AACD;AARA,SAAqBgB,+BAQpB"}