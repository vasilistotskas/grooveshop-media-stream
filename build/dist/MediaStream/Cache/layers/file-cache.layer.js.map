{"version":3,"sources":["../../../../../src/MediaStream/Cache/layers/file-cache.layer.ts"],"sourcesContent":["import type { CacheLayer, CacheLayerStats } from '../interfaces/cache-layer.interface'\nimport { promises as fs } from 'node:fs'\nimport { join } from 'node:path'\nimport { ConfigService } from '@microservice/Config/config.service'\nimport { CorrelatedLogger } from '@microservice/Correlation/utils/logger.util'\nimport { Injectable } from '@nestjs/common'\n\ninterface FileCacheEntry<T> {\n\tvalue: T\n\ttimestamp: number\n\tttl?: number\n}\n\n@Injectable()\nexport class FileCacheLayer implements CacheLayer {\n\tprivate readonly layerName = 'file'\n\tprivate readonly priority = 3\n\tprivate readonly cacheDirectory: string\n\tprivate stats = {\n\t\thits: 0,\n\t\tmisses: 0,\n\t\terrors: 0,\n\t}\n\n\tconstructor(private readonly _configService: ConfigService) {\n\t\tthis.cacheDirectory = this._configService.get('cache.file.directory')\n\t\tthis.ensureCacheDirectory()\n\t}\n\n\tasync get<T>(key: string): Promise<T | null> {\n\t\ttry {\n\t\t\tconst filePath = this.getFilePath(key)\n\t\t\tconst data = await fs.readFile(filePath, 'utf8')\n\t\t\tconst entry: FileCacheEntry<T> = JSON.parse(data)\n\n\t\t\tif (entry.ttl && Date.now() - entry.timestamp > entry.ttl * 1000) {\n\t\t\t\tawait this.delete(key)\n\t\t\t\tthis.stats.misses++\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\tthis.stats.hits++\n\t\t\treturn entry.value\n\t\t}\n\t\tcatch {\n\t\t\tthis.stats.misses++\n\t\t\treturn null\n\t\t}\n\t}\n\n\tasync set<T>(key: string, value: T, ttl?: number): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.getFilePath(key)\n\t\t\tconst entry: FileCacheEntry<T> = {\n\t\t\t\tvalue,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t\tttl,\n\t\t\t}\n\n\t\t\tawait fs.writeFile(filePath, JSON.stringify(entry), 'utf8')\n\t\t\tCorrelatedLogger.debug(`File cache SET: ${key}`, FileCacheLayer.name)\n\t\t}\n\t\tcatch (error: unknown) {\n\t\t\tthis.stats.errors++\n\t\t\tCorrelatedLogger.error(\n\t\t\t\t`File cache SET failed: ${(error as Error).message}`,\n\t\t\t\t(error as Error).stack,\n\t\t\t\tFileCacheLayer.name,\n\t\t\t)\n\t\t}\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.getFilePath(key)\n\t\t\tawait fs.unlink(filePath)\n\t\t\tCorrelatedLogger.debug(`File cache DELETE: ${key}`, FileCacheLayer.name)\n\t\t}\n\t\tcatch (error: unknown) {\n\t\t\tif ((error as any).code !== 'ENOENT') {\n\t\t\t\tthis.stats.errors++\n\t\t\t\tCorrelatedLogger.error(\n\t\t\t\t\t`File cache DELETE failed: ${(error as Error).message}`,\n\t\t\t\t\t(error as Error).stack,\n\t\t\t\t\tFileCacheLayer.name,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\tasync exists(key: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst filePath = this.getFilePath(key)\n\t\t\tawait fs.access(filePath)\n\t\t\treturn true\n\t\t}\n\t\tcatch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tasync clear(): Promise<void> {\n\t\ttry {\n\t\t\tconst files = await fs.readdir(this.cacheDirectory)\n\t\t\tawait Promise.all(\n\t\t\t\tfiles.map(file => fs.unlink(join(this.cacheDirectory, file)).catch(() => {})),\n\t\t\t)\n\t\t\tCorrelatedLogger.debug('File cache CLEARED', FileCacheLayer.name)\n\t\t}\n\t\tcatch (error: unknown) {\n\t\t\tthis.stats.errors++\n\t\t\tCorrelatedLogger.error(\n\t\t\t\t`File cache CLEAR failed: ${(error as Error).message}`,\n\t\t\t\t(error as Error).stack,\n\t\t\t\tFileCacheLayer.name,\n\t\t\t)\n\t\t}\n\t}\n\n\tasync getStats(): Promise<CacheLayerStats> {\n\t\ttry {\n\t\t\tconst files = await fs.readdir(this.cacheDirectory)\n\t\t\tconst totalRequests = this.stats.hits + this.stats.misses\n\t\t\treturn {\n\t\t\t\thits: this.stats.hits,\n\t\t\t\tmisses: this.stats.misses,\n\t\t\t\tkeys: files.length,\n\t\t\t\thitRate: totalRequests > 0 ? this.stats.hits / totalRequests : 0,\n\t\t\t\terrors: this.stats.errors,\n\t\t\t}\n\t\t}\n\t\tcatch {\n\t\t\treturn {\n\t\t\t\thits: this.stats.hits,\n\t\t\t\tmisses: this.stats.misses,\n\t\t\t\tkeys: 0,\n\t\t\t\thitRate: 0,\n\t\t\t\terrors: this.stats.errors + 1,\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayerName(): string {\n\t\treturn this.layerName\n\t}\n\n\tgetPriority(): number {\n\t\treturn this.priority\n\t}\n\n\tprivate getFilePath(key: string): string {\n\t\tconst sanitizedKey = key.replace(/[^\\w\\-.:]/g, '_')\n\t\treturn join(this.cacheDirectory, `${sanitizedKey}.json`)\n\t}\n\n\tprivate async ensureCacheDirectory(): Promise<void> {\n\t\ttry {\n\t\t\tawait fs.mkdir(this.cacheDirectory, { recursive: true })\n\t\t}\n\t\tcatch (error: unknown) {\n\t\t\tCorrelatedLogger.error(\n\t\t\t\t`Failed to create cache directory: ${(error as Error).message}`,\n\t\t\t\t(error as Error).stack,\n\t\t\t\tFileCacheLayer.name,\n\t\t\t)\n\t\t}\n\t}\n}\n"],"names":["promises","fs","join","ConfigService","CorrelatedLogger","Injectable","FileCacheLayer","_configService","layerName","priority","stats","hits","misses","errors","cacheDirectory","get","ensureCacheDirectory","key","filePath","getFilePath","data","readFile","entry","JSON","parse","ttl","Date","now","timestamp","delete","value","set","writeFile","stringify","debug","name","error","message","stack","unlink","code","exists","access","clear","files","readdir","Promise","all","map","file","catch","getStats","totalRequests","keys","length","hitRate","getLayerName","getPriority","sanitizedKey","replace","mkdir","recursive"],"mappings":"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"}