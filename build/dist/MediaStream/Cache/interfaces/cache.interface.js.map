{"version":3,"sources":["../../../../../src/MediaStream/Cache/interfaces/cache.interface.ts"],"sourcesContent":["export interface ICacheManager<T = any> {\r\n\tget: <K = T>(key: string) => Promise<K | null>\r\n\tset: <K = T>(key: string, value: K, ttl?: number) => Promise<void>\r\n\tdelete: (key: string) => Promise<boolean>\r\n\tclear: () => Promise<void>\r\n\thas: (key: string) => Promise<boolean>\r\n\tgetStats: () => Promise<CacheStats>\r\n\tkeys: () => Promise<string[]>\r\n\tmget: (keys: string[]) => Promise<Array<T | null>>\r\n\tmset: (entries: Array<{ key: string, value: T, ttl?: number }>) => Promise<void>\r\n}\r\n\r\nexport interface CacheStats {\r\n\thits: number\r\n\tmisses: number\r\n\tkeys: number\r\n\tksize: number\r\n\tvsize: number\r\n\thitRate: number\r\n\tmissRate: number\r\n}\r\n\r\nexport interface CacheEntry<T = any> {\r\n\tkey: string\r\n\tvalue: T\r\n\tttl: number\r\n\tcreatedAt: number\r\n\tlastAccessed: number\r\n\taccessCount: number\r\n\tsize: number\r\n}\r\n\r\nexport interface CacheConfig {\r\n\tmaxSize: number\r\n\tttl: number\r\n\tcheckPeriod: number\r\n\tuseClones: boolean\r\n\tdeleteOnExpire: boolean\r\n}\r\n\r\nexport interface CacheMetrics {\r\n\ttotalHits: number\r\n\ttotalMisses: number\r\n\ttotalKeys: number\r\n\tmemoryUsage: number\r\n\thitRate: number\r\n\tmissRate: number\r\n\tevictions: number\r\n\tlastEvictionTime?: number\r\n}\r\n"],"names":[],"mappings":"AAwCA,WASC"}