{"version":3,"sources":["../../../../../src/MediaStream/Cache/interfaces/cache-layer.interface.ts"],"sourcesContent":["export interface CacheLayer {\r\n\t/**\r\n\t * Get a value from the cache layer\r\n\t */\r\n\tget: <T>(key: string) => Promise<T | null>\r\n\r\n\t/**\r\n\t * Set a value in the cache layer\r\n\t */\r\n\tset: <T>(key: string, value: T, ttl?: number) => Promise<void>\r\n\r\n\t/**\r\n\t * Delete a key from the cache layer\r\n\t */\r\n\tdelete: (key: string) => Promise<void>\r\n\r\n\t/**\r\n\t * Check if a key exists in the cache layer\r\n\t */\r\n\texists: (key: string) => Promise<boolean>\r\n\r\n\t/**\r\n\t * Clear all keys from the cache layer\r\n\t */\r\n\tclear: () => Promise<void>\r\n\r\n\t/**\r\n\t * Get cache layer statistics\r\n\t */\r\n\tgetStats: () => Promise<CacheLayerStats>\r\n\r\n\t/**\r\n\t * Get the layer name for identification\r\n\t */\r\n\tgetLayerName: () => string\r\n\r\n\t/**\r\n\t * Get the layer priority (lower number = higher priority)\r\n\t */\r\n\tgetPriority: () => number\r\n}\r\n\r\nexport interface CacheLayerStats {\r\n\thits: number\r\n\tmisses: number\r\n\tkeys: number\r\n\thitRate: number\r\n\tmemoryUsage?: number\r\n\terrors: number\r\n}\r\n\r\nexport interface CacheKeyStrategy {\r\n\t/**\r\n\t * Generate a consistent cache key\r\n\t */\r\n\tgenerateKey: (namespace: string, identifier: string, params?: Record<string, any>) => string\r\n\r\n\t/**\r\n\t * Parse a cache key back to its components\r\n\t */\r\n\tparseKey: (key: string) => { namespace: string, identifier: string, params?: Record<string, any> }\r\n\r\n\t/**\r\n\t * Generate a hash for consistent key distribution\r\n\t */\r\n\tgenerateHash: (input: string) => string\r\n}\r\n\r\nexport interface CacheInvalidationStrategy {\r\n\t/**\r\n\t * Invalidate keys by pattern\r\n\t */\r\n\tinvalidateByPattern: (pattern: string) => Promise<string[]>\r\n\r\n\t/**\r\n\t * Invalidate keys by namespace\r\n\t */\r\n\tinvalidateByNamespace: (namespace: string) => Promise<string[]>\r\n\r\n\t/**\r\n\t * Invalidate keys by tags\r\n\t */\r\n\tinvalidateByTags: (tags: string[]) => Promise<string[]>\r\n}\n"],"names":[],"mappings":"AAoEA,WAeC"}