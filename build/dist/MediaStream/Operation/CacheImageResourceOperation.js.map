{"version":3,"sources":["../../../../src/MediaStream/Operation/CacheImageResourceOperation.ts"],"sourcesContent":["import { HttpService } from '@nestjs/axios'\r\nimport { Injectable, Scope, Logger } from '@nestjs/common'\r\nimport { existsSync, readFileSync, unlink, writeFileSync } from 'fs'\r\nimport ResourceMetaData from '@microservice/DTO/ResourceMetaData'\r\nimport CacheImageRequest, {\r\n\tBackgroundOptions,\r\n\tFitOptions,\r\n\tPositionOptions,\r\n\tResizeOptions,\r\n\tSupportedResizeFormats\r\n} from '@microservice/API/DTO/CacheImageRequest'\r\nimport { ResourceIdentifierKP } from '@microservice/Constant/KeyProperties'\r\nimport FetchResourceResponseJob from '@microservice/Job/FetchResourceResponseJob'\r\nimport WebpImageManipulationJob from '@microservice/Job/WebpImageManipulationJob'\r\nimport ValidateCacheImageRequestRule from '@microservice/Rule/ValidateCacheImageRequestRule'\r\nimport StoreResourceResponseToFileJob from '@microservice/Job/StoreResourceResponseToFileJob'\r\nimport GenerateResourceIdentityFromRequestJob from '@microservice/Job/GenerateResourceIdentityFromRequestJob'\r\nimport { createHash } from 'crypto'\r\n\r\n@Injectable({ scope: Scope.REQUEST })\r\nexport default class CacheImageResourceOperation {\r\n\tprivate readonly logger = new Logger(CacheImageResourceOperation.name)\r\n\r\n\tconstructor(\r\n\t\tprivate readonly httpService: HttpService,\r\n\t\tprivate readonly validateCacheImageRequest: ValidateCacheImageRequestRule,\r\n\t\tprivate readonly fetchResourceResponseJob: FetchResourceResponseJob,\r\n\t\tprivate readonly webpImageManipulationJob: WebpImageManipulationJob,\r\n\t\tprivate readonly storeResourceResponseToFileJob: StoreResourceResponseToFileJob,\r\n\t\tprivate readonly generateResourceIdentityFromRequestJob: GenerateResourceIdentityFromRequestJob\r\n\t) {}\r\n\r\n\trequest: CacheImageRequest\r\n\r\n\tid: ResourceIdentifierKP\r\n\r\n\tmetaData: ResourceMetaData\r\n\r\n\tget getResourcePath(): string {\r\n\t\treturn `${process.cwd()}/storage/${this.id}.rsc`\r\n\t}\r\n\r\n\tget getResourceTempPath(): string {\r\n\t\treturn `${process.cwd()}/storage/${this.id}.rst`\r\n\t}\r\n\r\n\tget getResourceMetaPath(): string {\r\n\t\treturn `${process.cwd()}/storage/${this.id}.rsm`\r\n\t}\r\n\r\n\tget resourceExists(): boolean {\r\n\t\tif (!existsSync(this.getResourcePath)) return false\r\n\r\n\t\tif (!existsSync(this.getResourceMetaPath)) return false\r\n\r\n\t\tconst headers = this.getHeaders\r\n\r\n\t\tif (!headers.version || 1 !== headers.version) return false\r\n\r\n\t\treturn headers.dateCreated + headers.privateTTL > Date.now()\r\n\t}\r\n\r\n\tget getHeaders(): ResourceMetaData {\r\n\t\tif (null === this.metaData) {\r\n\t\t\tthis.metaData = JSON.parse(readFileSync(this.getResourceMetaPath) as unknown as string)\r\n\t\t}\r\n\r\n\t\treturn this.metaData\r\n\t}\r\n\r\n\tpublic async setup(cacheImageRequest: CacheImageRequest): Promise<void> {\r\n\t\tthis.request = cacheImageRequest\r\n\t\tawait this.validateCacheImageRequest.setup(this.request)\r\n\t\tawait this.validateCacheImageRequest.apply()\r\n\t\tthis.id = await this.generateResourceIdentityFromRequestJob.handle(this.request)\r\n\t\tthis.metaData = null\r\n\t}\r\n\r\n\tpublic async execute(): Promise<void> {\r\n\t\tif (this.resourceExists) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst response = await this.fetchResourceResponseJob.handle(this.request)\r\n\t\tawait this.storeResourceResponseToFileJob.handle(this.request.resourceTarget, this.getResourceTempPath, response)\r\n\t\tconst manipulationResult = await this.webpImageManipulationJob.handle(\r\n\t\t\tthis.getResourceTempPath,\r\n\t\t\tthis.getResourcePath,\r\n\t\t\tthis.request.resizeOptions\r\n\t\t)\r\n\r\n\t\tconst resourceMetaDataOptions = {\r\n\t\t\tsize: manipulationResult.size,\r\n\t\t\tformat: manipulationResult.format,\r\n\t\t\tp: this.request.ttl,\r\n\t\t\tdateCreated: Date.now(),\r\n\t\t\tpublicTTL: 12 * 30 * 24 * 60 * 60 * 1000\r\n\t\t} as unknown as ResourceMetaData\r\n\t\tif (this.request.ttl) {\r\n\t\t\tresourceMetaDataOptions['privateTTL'] = this.request.ttl\r\n\t\t}\r\n\t\tthis.metaData = new ResourceMetaData(resourceMetaDataOptions)\r\n\r\n\t\twriteFileSync(this.getResourceMetaPath, JSON.stringify(this.metaData))\r\n\t\tunlink(this.getResourceTempPath, (err) => {\r\n\t\t\tif (null !== err) {\r\n\t\t\t\tthis.logger.error(err)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic async optimizeAndServeDefaultImage(resizeOptions: ResizeOptions): Promise<string> {\r\n\t\tconst optionsString = this.createOptionsString(resizeOptions)\r\n\t\tconst optimizedImageName = `default_optimized_${optionsString}.webp`\r\n\t\tconst optimizedImagePath = `${process.cwd()}/storage/${optimizedImageName}`\r\n\r\n\t\tconst resizeOptionsWithDefaults = {\r\n\t\t\t...resizeOptions,\r\n\t\t\tfit: FitOptions.contain,\r\n\t\t\tposition: PositionOptions.entropy,\r\n\t\t\tformat: SupportedResizeFormats.webp,\r\n\t\t\tbackground: BackgroundOptions.transparent,\r\n\t\t\ttrimThreshold: 5,\r\n\t\t\tquality: 100\r\n\t\t}\r\n\r\n\t\tif (!existsSync(optimizedImagePath)) {\r\n\t\t\tconst defaultImagePath = `${process.cwd()}/public/default.png`\r\n\t\t\tawait this.webpImageManipulationJob.handle(defaultImagePath, optimizedImagePath, resizeOptionsWithDefaults)\r\n\t\t}\r\n\r\n\t\treturn optimizedImagePath\r\n\t}\r\n\r\n\tprivate createOptionsString(resizeOptions: ResizeOptions): string {\r\n\t\tconst sortedOptions = Object.keys(resizeOptions)\r\n\t\t\t.sort()\r\n\t\t\t.reduce((obj, key) => {\r\n\t\t\t\tobj[key] = resizeOptions[key]\r\n\t\t\t\treturn obj\r\n\t\t\t}, {})\r\n\r\n\t\tconst optionsString = JSON.stringify(sortedOptions)\r\n\r\n\t\treturn createHash('md5').update(optionsString).digest('hex')\r\n\t}\r\n}\r\n"],"names":["CacheImageResourceOperation","getResourcePath","process","cwd","id","getResourceTempPath","getResourceMetaPath","resourceExists","existsSync","headers","getHeaders","version","dateCreated","privateTTL","Date","now","metaData","JSON","parse","readFileSync","setup","cacheImageRequest","request","validateCacheImageRequest","apply","generateResourceIdentityFromRequestJob","handle","execute","response","fetchResourceResponseJob","storeResourceResponseToFileJob","resourceTarget","manipulationResult","webpImageManipulationJob","resizeOptions","resourceMetaDataOptions","size","format","p","ttl","publicTTL","ResourceMetaData","writeFileSync","stringify","unlink","err","logger","error","optimizeAndServeDefaultImage","optionsString","createOptionsString","optimizedImageName","optimizedImagePath","resizeOptionsWithDefaults","fit","FitOptions","contain","position","PositionOptions","entropy","SupportedResizeFormats","webp","background","BackgroundOptions","transparent","trimThreshold","quality","defaultImagePath","sortedOptions","Object","keys","sort","reduce","obj","key","createHash","update","digest","constructor","httpService","Logger","name","Injectable","scope","Scope","REQUEST"],"mappings":"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"}