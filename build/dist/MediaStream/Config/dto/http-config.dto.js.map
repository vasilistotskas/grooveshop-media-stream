{"version":3,"sources":["../../../../../src/MediaStream/Config/dto/http-config.dto.ts"],"sourcesContent":["import { Transform, Type } from 'class-transformer'\r\nimport { IsBoolean, IsNumber, Min, ValidateNested } from 'class-validator'\r\n\r\nexport class CircuitBreakerConfigDto {\r\n\t@IsBoolean()\r\n\t@Transform(({ value }) => value === 'true' || value === true || false)\r\n\tenabled: boolean = false\r\n\r\n\t@IsNumber()\r\n\t@Min(1)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 5)\r\n\tfailureThreshold: number = 5\r\n\r\n\t@IsNumber()\r\n\t@Min(1000)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 60000)\r\n\tresetTimeout: number = 60000\r\n\r\n\t@IsNumber()\r\n\t@Min(1000)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 30000)\r\n\tmonitoringPeriod: number = 30000\r\n}\r\n\r\nexport class ConnectionPoolConfigDto {\r\n\t@IsNumber()\r\n\t@Min(1)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 50)\r\n\tmaxSockets: number = 50\r\n\r\n\t@IsNumber()\r\n\t@Min(1)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 10)\r\n\tmaxFreeSockets: number = 10\r\n\r\n\t@IsNumber()\r\n\t@Min(100)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 30000)\r\n\ttimeout: number = 30000\r\n\r\n\t@IsBoolean()\r\n\t@Transform(({ value }) => value === 'true' || value === true)\r\n\tkeepAlive: boolean = true\r\n\r\n\t@IsNumber()\r\n\t@Min(100)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 1000)\r\n\tkeepAliveMsecs: number = 1000\r\n\r\n\t@IsNumber()\r\n\t@Min(100)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 5000)\r\n\tconnectTimeout: number = 5000\r\n}\r\n\r\nexport class RetryConfigDto {\r\n\t@IsNumber()\r\n\t@Min(0)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 3)\r\n\tretries: number = 3\r\n\r\n\t@IsNumber()\r\n\t@Min(100)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 1000)\r\n\tretryDelay: number = 1000\r\n\r\n\t@IsNumber()\r\n\t@Min(1)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 2)\r\n\tretryDelayMultiplier: number = 2\r\n\r\n\t@IsNumber()\r\n\t@Min(1000)\r\n\t@Transform(({ value }) => Number.parseInt(value) || 10000)\r\n\tmaxRetryDelay: number = 10000\r\n\r\n\t@IsBoolean()\r\n\t@Transform(({ value }) => value === 'true' || value === true)\r\n\tretryOnTimeout: boolean = true\r\n\r\n\t@IsBoolean()\r\n\t@Transform(({ value }) => value === 'true' || value === true)\r\n\tretryOnConnectionError: boolean = true\r\n}\r\n\r\nexport class HttpConfigDto {\r\n\t@ValidateNested()\r\n\t@Type(() => CircuitBreakerConfigDto)\r\n\tcircuitBreaker: CircuitBreakerConfigDto = new CircuitBreakerConfigDto()\r\n\r\n\t@ValidateNested()\r\n\t@Type(() => ConnectionPoolConfigDto)\r\n\tconnectionPool: ConnectionPoolConfigDto = new ConnectionPoolConfigDto()\r\n\r\n\t@ValidateNested()\r\n\t@Type(() => RetryConfigDto)\r\n\tretry: RetryConfigDto = new RetryConfigDto()\r\n}\r\n"],"names":["Transform","Type","IsBoolean","IsNumber","Min","ValidateNested","CircuitBreakerConfigDto","enabled","failureThreshold","resetTimeout","monitoringPeriod","value","Number","parseInt","ConnectionPoolConfigDto","maxSockets","maxFreeSockets","timeout","keepAlive","keepAliveMsecs","connectTimeout","RetryConfigDto","retries","retryDelay","retryDelayMultiplier","maxRetryDelay","retryOnTimeout","retryOnConnectionError","HttpConfigDto","circuitBreaker","connectionPool","retry"],"mappings":";;;;;;;;;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,oBAAmB;AACnD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAiB;AAE1E,OAAO,MAAMC;;aAGZC,UAAmB;aAKnBC,mBAA2B;aAK3BC,eAAuB;aAKvBC,mBAA2B;;AAC5B;;;eAjBa,EAAEC,KAAK,EAAE,GAAKA,UAAU,UAAUA,UAAU,QAAQ;;;;;;eAKpD,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;AAIrD,OAAO,MAAMG;;aAIZC,aAAqB;aAKrBC,iBAAyB;aAKzBC,UAAkB;aAIlBC,YAAqB;aAKrBC,iBAAyB;aAKzBC,iBAAyB;;AAC1B;;;;eA1Ba,EAAET,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;eAIxC,EAAEA,KAAK,EAAE,GAAKA,UAAU,UAAUA,UAAU;;;;;;eAK5C,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;AAIrD,OAAO,MAAMU;;aAIZC,UAAkB;aAKlBC,aAAqB;aAKrBC,uBAA+B;aAK/BC,gBAAwB;aAIxBC,iBAA0B;aAI1BC,yBAAkC;;AACnC;;;;eAzBa,EAAEhB,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;;eAKxC,EAAEA,KAAK,EAAE,GAAKC,OAAOC,QAAQ,CAACF,UAAU;;;;;eAIxC,EAAEA,KAAK,EAAE,GAAKA,UAAU,UAAUA,UAAU;;;;;eAI5C,EAAEA,KAAK,EAAE,GAAKA,UAAU,UAAUA,UAAU;;;AAIzD,OAAO,MAAMiB;;aAGZC,iBAA0C,IAAIvB;aAI9CwB,iBAA0C,IAAIhB;aAI9CiB,QAAwB,IAAIV;;AAC7B;;;aAVaf;;;;;aAIAQ;;;;;aAIAO"}