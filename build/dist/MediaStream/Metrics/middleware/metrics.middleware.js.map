{"version":3,"sources":["../../../../../src/MediaStream/Metrics/middleware/metrics.middleware.ts"],"sourcesContent":["import type { NestMiddleware } from '@nestjs/common'\r\nimport type { NextFunction, Request, Response } from 'express'\r\nimport { Buffer } from 'node:buffer'\r\nimport { Injectable, Logger } from '@nestjs/common'\r\nimport { MetricsService } from '../services/metrics.service'\r\n\r\n@Injectable()\r\nexport class MetricsMiddleware implements NestMiddleware {\r\n\tprivate readonly _logger = new Logger(MetricsMiddleware.name)\r\n\r\n\tconstructor(private readonly metricsService: MetricsService) {}\r\n\r\n\tuse(req: Request, res: Response, next: NextFunction): void {\r\n\t\tconst startTime = Date.now()\r\n\r\n\t\tthis.metricsService.incrementRequestsInFlight()\r\n\r\n\t\tconst requestSize = this.getRequestSize(req)\r\n\r\n\t\tconst originalEnd = res.end.bind(res)\r\n\t\tlet responseSize = 0\r\n\r\n\t\tres.end = function (chunk?: any, encoding?: any, cb?: any): Response {\r\n\t\t\tif (chunk) {\r\n\t\t\t\tresponseSize += Buffer.isBuffer(chunk) ? chunk.length : Buffer.byteLength(chunk, encoding)\r\n\t\t\t}\r\n\r\n\t\t\treturn originalEnd(chunk, encoding, cb)\r\n\t\t} as any\r\n\r\n\t\tres.on('finish', () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst duration = (Date.now() - startTime) / 1000\r\n\t\t\t\tconst route = this.getRoute(req)\r\n\r\n\t\t\t\tthis.metricsService.recordHttpRequest(\r\n\t\t\t\t\treq.method,\r\n\t\t\t\t\troute,\r\n\t\t\t\t\tres.statusCode,\r\n\t\t\t\t\tduration,\r\n\t\t\t\t\trequestSize,\r\n\t\t\t\t\tresponseSize,\r\n\t\t\t\t)\r\n\r\n\t\t\t\tthis.metricsService.decrementRequestsInFlight()\r\n\r\n\t\t\t\tthis._logger.debug(`HTTP ${req.method} ${route} ${res.statusCode} - ${duration}s`)\r\n\t\t\t}\r\n\t\t\tcatch (error: unknown) {\r\n\t\t\t\tthis._logger.error('Failed to record HTTP metrics:', error)\r\n\t\t\t\tthis.metricsService.recordError('metrics_middleware', 'http_tracking')\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tres.on('error', (error: unknown) => {\r\n\t\t\tthis._logger.error('HTTP request error:', error)\r\n\t\t\tthis.metricsService.recordError('http_request', 'response_error')\r\n\t\t\tthis.metricsService.decrementRequestsInFlight()\r\n\t\t})\r\n\r\n\t\tnext()\r\n\t}\r\n\r\n\tprivate getRequestSize(req: Request): number {\r\n\t\tconst contentLength = req.get('content-length')\r\n\t\tif (contentLength) {\r\n\t\t\treturn Number.parseInt(contentLength, 10) || 0\r\n\t\t}\r\n\r\n\t\tlet size = 0\r\n\r\n\t\tfor (const [key, value] of Object.entries(req.headers)) {\r\n\t\t\tsize += key.length + (Array.isArray(value) ? value.join('').length : String(value).length)\r\n\t\t}\r\n\r\n\t\tsize += req.url.length\r\n\r\n\t\treturn size\r\n\t}\r\n\r\n\tprivate getRoute(req: Request): string {\r\n\t\tif (req.route?.path) {\r\n\t\t\treturn req.route.path\r\n\t\t}\r\n\r\n\t\tconst pathname = req.url.split('?')[0]\r\n\r\n\t\treturn pathname\r\n\t\t\t.replace(/\\/\\d+/g, '/:id')\r\n\t\t\t.replace(/\\/[a-f0-9-]{36}/g, '/:uuid')\r\n\t\t\t.replace(/\\/[a-f0-9]{24}/g, '/:objectId')\r\n\t}\r\n}\r\n"],"names":["Buffer","Injectable","Logger","MetricsService","MetricsMiddleware","use","req","res","next","startTime","Date","now","metricsService","incrementRequestsInFlight","requestSize","getRequestSize","originalEnd","end","bind","responseSize","chunk","encoding","cb","isBuffer","length","byteLength","on","duration","route","getRoute","recordHttpRequest","method","statusCode","decrementRequestsInFlight","_logger","debug","error","recordError","contentLength","get","Number","parseInt","size","key","value","Object","entries","headers","Array","isArray","join","String","url","path","pathname","split","replace","name"],"mappings":";;;;;;;;;AAEA,SAASA,MAAM,QAAQ,cAAa;AACpC,SAASC,UAAU,EAAEC,MAAM,QAAQ,iBAAgB;AACnD,SAASC,cAAc,QAAQ,iCAA6B;AAG5D,OAAO,MAAMC;IAKZC,IAAIC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAQ;QAC1D,MAAMC,YAAYC,KAAKC,GAAG;QAE1B,IAAI,CAACC,cAAc,CAACC,yBAAyB;QAE7C,MAAMC,cAAc,IAAI,CAACC,cAAc,CAACT;QAExC,MAAMU,cAAcT,IAAIU,GAAG,CAACC,IAAI,CAACX;QACjC,IAAIY,eAAe;QAEnBZ,IAAIU,GAAG,GAAG,SAAUG,KAAW,EAAEC,QAAc,EAAEC,EAAQ;YACxD,IAAIF,OAAO;gBACVD,gBAAgBnB,OAAOuB,QAAQ,CAACH,SAASA,MAAMI,MAAM,GAAGxB,OAAOyB,UAAU,CAACL,OAAOC;YAClF;YAEA,OAAOL,YAAYI,OAAOC,UAAUC;QACrC;QAEAf,IAAImB,EAAE,CAAC,UAAU;YAChB,IAAI;gBACH,MAAMC,WAAW,AAACjB,CAAAA,KAAKC,GAAG,KAAKF,SAAQ,IAAK;gBAC5C,MAAMmB,QAAQ,IAAI,CAACC,QAAQ,CAACvB;gBAE5B,IAAI,CAACM,cAAc,CAACkB,iBAAiB,CACpCxB,IAAIyB,MAAM,EACVH,OACArB,IAAIyB,UAAU,EACdL,UACAb,aACAK;gBAGD,IAAI,CAACP,cAAc,CAACqB,yBAAyB;gBAE7C,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,KAAK,EAAE7B,IAAIyB,MAAM,CAAC,CAAC,EAAEH,MAAM,CAAC,EAAErB,IAAIyB,UAAU,CAAC,GAAG,EAAEL,SAAS,CAAC,CAAC;YAClF,EACA,OAAOS,OAAgB;gBACtB,IAAI,CAACF,OAAO,CAACE,KAAK,CAAC,kCAAkCA;gBACrD,IAAI,CAACxB,cAAc,CAACyB,WAAW,CAAC,sBAAsB;YACvD;QACD;QAEA9B,IAAImB,EAAE,CAAC,SAAS,CAACU;YAChB,IAAI,CAACF,OAAO,CAACE,KAAK,CAAC,uBAAuBA;YAC1C,IAAI,CAACxB,cAAc,CAACyB,WAAW,CAAC,gBAAgB;YAChD,IAAI,CAACzB,cAAc,CAACqB,yBAAyB;QAC9C;QAEAzB;IACD;IAEQO,eAAeT,GAAY,EAAU;QAC5C,MAAMgC,gBAAgBhC,IAAIiC,GAAG,CAAC;QAC9B,IAAID,eAAe;YAClB,OAAOE,OAAOC,QAAQ,CAACH,eAAe,OAAO;QAC9C;QAEA,IAAII,OAAO;QAEX,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACxC,IAAIyC,OAAO,EAAG;YACvDL,QAAQC,IAAInB,MAAM,GAAIwB,CAAAA,MAAMC,OAAO,CAACL,SAASA,MAAMM,IAAI,CAAC,IAAI1B,MAAM,GAAG2B,OAAOP,OAAOpB,MAAM,AAAD;QACzF;QAEAkB,QAAQpC,IAAI8C,GAAG,CAAC5B,MAAM;QAEtB,OAAOkB;IACR;IAEQb,SAASvB,GAAY,EAAU;QACtC,IAAIA,IAAIsB,KAAK,EAAEyB,MAAM;YACpB,OAAO/C,IAAIsB,KAAK,CAACyB,IAAI;QACtB;QAEA,MAAMC,WAAWhD,IAAI8C,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;QAEtC,OAAOD,SACLE,OAAO,CAAC,UAAU,QAClBA,OAAO,CAAC,oBAAoB,UAC5BA,OAAO,CAAC,mBAAmB;IAC9B;IAjFA,YAAY,AAAiB5C,cAA8B,CAAE;aAAhCA,iBAAAA;aAFZsB,UAAU,IAAIhC,OAAOE,kBAAkBqD,IAAI;IAEE;AAkF/D"}