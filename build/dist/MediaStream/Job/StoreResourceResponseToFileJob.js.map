{"version":3,"sources":["../../../../src/MediaStream/Job/StoreResourceResponseToFileJob.ts"],"sourcesContent":["import * as fs from 'fs'\r\nimport { AxiosResponse } from 'axios'\r\nimport { Injectable, Scope } from '@nestjs/common'\r\nimport UnableToStoreFetchedResourceException from '@microservice/API/Exception/UnableToStoreFetchedResourceException'\r\n\r\n@Injectable({ scope: Scope.REQUEST })\r\nexport default class StoreResourceResponseToFileJob {\r\n\tasync handle(resourceName: string, path: string, response: AxiosResponse): Promise<void> {\r\n\t\tconst fileStream = fs.createWriteStream(path)\r\n\t\ttry {\r\n\t\t\tresponse.data.pipe(fileStream)\r\n\t\t\tawait new Promise((resolve, reject) => {\r\n\t\t\t\tfileStream.on('finish', resolve).on('error', reject)\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tthrow new UnableToStoreFetchedResourceException(resourceName)\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["StoreResourceResponseToFileJob","handle","resourceName","path","response","fileStream","fs","createWriteStream","data","pipe","Promise","resolve","reject","on","e","UnableToStoreFetchedResourceException","Injectable","scope","Scope","REQUEST"],"mappings":";;;;;;;eAMqBA;;;4DAND;wBAEc;8FACgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGnC,IAAA,AAAMA,iCAAN,MAAMA;IACpB,MAAMC,OAAOC,YAAoB,EAAEC,IAAY,EAAEC,QAAuB,EAAiB;QACxF,MAAMC,aAAaC,IAAGC,iBAAiB,CAACJ;QACxC,IAAI;YACHC,SAASI,IAAI,CAACC,IAAI,CAACJ;YACnB,MAAM,IAAIK,QAAQ,CAACC,SAASC;gBAC3BP,WAAWQ,EAAE,CAAC,UAAUF,SAASE,EAAE,CAAC,SAASD;YAC9C;QACD,EAAE,OAAOE,GAAG;YACX,MAAM,IAAIC,8CAAqC,CAACb;QACjD;IACD;AACD;AAZqBF;IADpBgB,IAAAA,kBAAU,EAAC;QAAEC,OAAOC,aAAK,CAACC,OAAO;IAAC;GACdnB"}