{"version":3,"sources":["../../../../src/MediaStream/Job/FetchResourceResponseJob.ts"],"sourcesContent":["import { AxiosResponse } from 'axios'\r\nimport { HttpService } from '@nestjs/axios'\r\nimport { Injectable, Scope, Logger } from '@nestjs/common'\r\nimport CacheImageRequest from '@microservice/API/DTO/CacheImageRequest'\r\n\r\n@Injectable({ scope: Scope.REQUEST })\r\nexport default class FetchResourceResponseJob {\r\n\tprivate readonly logger = new Logger(FetchResourceResponseJob.name)\r\n\tconstructor(private readonly httpService: HttpService) {}\r\n\r\n\tasync handle(request: CacheImageRequest): Promise<AxiosResponse> {\r\n\t\ttry {\r\n\t\t\treturn await this.httpService.axiosRef({\r\n\t\t\t\turl: request.resourceTarget,\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tresponseType: 'stream'\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\t// Return a 404 Bad Request response\r\n\t\t\tthis.logger.error(error)\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 404,\r\n\t\t\t\tstatusText: 'Bad Request',\r\n\t\t\t\theaders: {},\r\n\t\t\t\tconfig: error.config,\r\n\t\t\t\tdata: null\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["FetchResourceResponseJob","handle","request","httpService","axiosRef","url","resourceTarget","method","responseType","error","logger","status","statusText","headers","config","data","constructor","Logger","name","Injectable","scope","Scope","REQUEST"],"mappings":";;;;;;;eAMqBA;;;uBALO;wBACc;;;;;;;;;;AAI3B,IAAA,AAAMA,2BAAN,MAAMA;IAIpB,MAAMC,OAAOC,OAA0B,EAA0B;QAChE,IAAI;YACH,OAAO,MAAM,IAAI,CAACC,WAAW,CAACC,QAAQ,CAAC;gBACtCC,KAAKH,QAAQI,cAAc;gBAC3BC,QAAQ;gBACRC,cAAc;YACf;QACD,EAAE,OAAOC,OAAO;YACf,oCAAoC;YACpC,IAAI,CAACC,MAAM,CAACD,KAAK,CAACA;YAClB,OAAO;gBACNE,QAAQ;gBACRC,YAAY;gBACZC,SAAS,CAAC;gBACVC,QAAQL,MAAMK,MAAM;gBACpBC,MAAM;YACP;QACD;IACD;IApBAC,YAAY,AAAiBb,WAAwB,CAAE;aAA1BA,cAAAA;aADZO,SAAS,IAAIO,cAAM,CAACjB,yBAAyBkB,IAAI;IACV;AAqBzD;AAvBqBlB;IADpBmB,IAAAA,kBAAU,EAAC;QAAEC,OAAOC,aAAK,CAACC,OAAO;IAAC;;;eAGQ,kBAAW,4BAAX,kBAAW;;GAFjCtB"}