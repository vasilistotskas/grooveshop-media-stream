{"version":3,"sources":["../../../../src/MediaStream/Job/WebpImageManipulationJob.ts"],"sourcesContent":["import { each } from 'lodash'\r\nimport { Injectable, Scope } from '@nestjs/common'\r\nimport { ResizeOptions } from '@microservice/API/DTO/CacheImageRequest'\r\nimport ManipulationJobResult from '@microservice/DTO/ManipulationJobResult'\r\nimport sharp from 'sharp'\r\n\r\n@Injectable({ scope: Scope.REQUEST })\r\nexport default class WebpImageManipulationJob {\r\n\tasync handle(filePathFrom: string, filePathTo: string, options: ResizeOptions): Promise<ManipulationJobResult> {\r\n\t\tconst manipulation = sharp(filePathFrom)\r\n\t\tswitch (options.format) {\r\n\t\t\tcase 'jpeg':\r\n\t\t\t\tmanipulation.jpeg({ quality: options.quality })\r\n\t\t\t\tbreak\r\n\t\t\tcase 'png':\r\n\t\t\t\tmanipulation.png({ quality: options.quality })\r\n\t\t\t\tbreak\r\n\t\t\tcase 'webp':\r\n\t\t\t\tmanipulation.webp({ quality: options.quality })\r\n\t\t\t\tbreak\r\n\t\t\tcase 'gif':\r\n\t\t\t\tmanipulation.gif()\r\n\t\t\t\tbreak\r\n\t\t\tcase 'tiff':\r\n\t\t\t\tmanipulation.tiff()\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tmanipulation.webp({ quality: options.quality })\r\n\t\t}\r\n\r\n\t\tconst resizeScales: Record<string, number> = {}\r\n\t\teach(['width', 'height'], (scale) => {\r\n\t\t\tif (null !== options[scale] && !isNaN(options[scale])) {\r\n\t\t\t\tresizeScales[scale] = Number(options[scale])\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (Object.keys(resizeScales).length > 0) {\r\n\t\t\tif (null !== options.trimThreshold && !isNaN(options.trimThreshold)) {\r\n\t\t\t\tmanipulation.trim({ background: options.background, threshold: Number(options.trimThreshold) })\r\n\t\t\t}\r\n\r\n\t\t\tmanipulation.resize({\r\n\t\t\t\t...resizeScales,\r\n\t\t\t\tfit: options.fit,\r\n\t\t\t\tposition: options.position,\r\n\t\t\t\tbackground: options.background\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst manipulatedFile = await manipulation.toFile(filePathTo)\r\n\r\n\t\treturn new ManipulationJobResult({\r\n\t\t\tsize: String(manipulatedFile.size),\r\n\t\t\tformat: manipulatedFile.format\r\n\t\t})\r\n\t}\r\n}\r\n"],"names":["WebpImageManipulationJob","handle","filePathFrom","filePathTo","options","manipulation","sharp","format","jpeg","quality","png","webp","gif","tiff","resizeScales","each","scale","isNaN","Number","Object","keys","length","trimThreshold","trim","background","threshold","resize","fit","position","manipulatedFile","toFile","ManipulationJobResult","size","String","Injectable","scope","Scope","REQUEST"],"mappings":";;;;;;;eAOqBA;;;wBAPA;wBACa;8EAEA;8DAChB;;;;;;;;;;;;AAGH,IAAA,AAAMA,2BAAN,MAAMA;IACpB,MAAMC,OAAOC,YAAoB,EAAEC,UAAkB,EAAEC,OAAsB,EAAkC;QAC9G,MAAMC,eAAeC,IAAAA,cAAK,EAACJ;QAC3B,OAAQE,QAAQG,MAAM;YACrB,KAAK;gBACJF,aAAaG,IAAI,CAAC;oBAAEC,SAASL,QAAQK,OAAO;gBAAC;gBAC7C;YACD,KAAK;gBACJJ,aAAaK,GAAG,CAAC;oBAAED,SAASL,QAAQK,OAAO;gBAAC;gBAC5C;YACD,KAAK;gBACJJ,aAAaM,IAAI,CAAC;oBAAEF,SAASL,QAAQK,OAAO;gBAAC;gBAC7C;YACD,KAAK;gBACJJ,aAAaO,GAAG;gBAChB;YACD,KAAK;gBACJP,aAAaQ,IAAI;gBACjB;YACD;gBACCR,aAAaM,IAAI,CAAC;oBAAEF,SAASL,QAAQK,OAAO;gBAAC;QAC/C;QAEA,MAAMK,eAAuC,CAAC;QAC9CC,IAAAA,YAAI,EAAC;YAAC;YAAS;SAAS,EAAE,CAACC;YAC1B,IAAI,SAASZ,OAAO,CAACY,MAAM,IAAI,CAACC,MAAMb,OAAO,CAACY,MAAM,GAAG;gBACtDF,YAAY,CAACE,MAAM,GAAGE,OAAOd,OAAO,CAACY,MAAM;YAC5C;QACD;QAEA,IAAIG,OAAOC,IAAI,CAACN,cAAcO,MAAM,GAAG,GAAG;YACzC,IAAI,SAASjB,QAAQkB,aAAa,IAAI,CAACL,MAAMb,QAAQkB,aAAa,GAAG;gBACpEjB,aAAakB,IAAI,CAAC;oBAAEC,YAAYpB,QAAQoB,UAAU;oBAAEC,WAAWP,OAAOd,QAAQkB,aAAa;gBAAE;YAC9F;YAEAjB,aAAaqB,MAAM,CAAC;gBACnB,GAAGZ,YAAY;gBACfa,KAAKvB,QAAQuB,GAAG;gBAChBC,UAAUxB,QAAQwB,QAAQ;gBAC1BJ,YAAYpB,QAAQoB,UAAU;YAC/B;QACD;QAEA,MAAMK,kBAAkB,MAAMxB,aAAayB,MAAM,CAAC3B;QAElD,OAAO,IAAI4B,8BAAqB,CAAC;YAChCC,MAAMC,OAAOJ,gBAAgBG,IAAI;YACjCzB,QAAQsB,gBAAgBtB,MAAM;QAC/B;IACD;AACD;AAlDqBP;IADpBkC,IAAAA,kBAAU,EAAC;QAAEC,OAAOC,aAAK,CAACC,OAAO;IAAC;GACdrC"}