{"version":3,"sources":["../../../../../src/MediaStream/Monitoring/controllers/monitoring.controller.ts"],"sourcesContent":["import type { Alert, AlertRule, SystemHealth } from '../interfaces/monitoring.interface'\r\nimport { Body, Controller, Get, HttpCode, HttpStatus, Param, Post, Query } from '@nestjs/common'\r\nimport { AlertSeverity } from '../interfaces/monitoring.interface'\r\nimport { AlertService } from '../services/alert.service'\r\nimport { MonitoringService } from '../services/monitoring.service'\r\nimport { PerformanceMonitoringService } from '../services/performance-monitoring.service'\r\n\r\n@Controller('monitoring')\r\nexport class MonitoringController {\r\n\tconstructor(\r\n\t\tprivate readonly monitoringService: MonitoringService,\r\n\t\tprivate readonly alertService: AlertService,\r\n\t\tprivate readonly performanceService: PerformanceMonitoringService,\r\n\t) {}\r\n\r\n\t/**\r\n\t * Get system health overview\r\n\t */\r\n\t@Get('health')\r\n\tasync getSystemHealth(): Promise<SystemHealth> {\r\n\t\treturn await this.monitoringService.getSystemHealth()\r\n\t}\r\n\r\n\t/**\r\n\t * Get monitoring dashboard data\r\n\t */\r\n\t@Get('dashboard')\r\n\tasync getDashboard(@Query('since') since?: string): Promise<any> {\r\n\t\tconst sinceTimestamp = since ? Number.parseInt(since) : Date.now() - 24 * 60 * 60 * 1000\r\n\r\n\t\tconst [systemHealth, alertStats, performanceOverview, monitoringStats] = await Promise.all([\r\n\t\t\tthis.monitoringService.getSystemHealth(),\r\n\t\t\tthis.alertService.getAlertStats(),\r\n\t\t\tthis.performanceService.getPerformanceOverview(sinceTimestamp),\r\n\t\t\tthis.monitoringService.getStats(),\r\n\t\t])\r\n\r\n\t\treturn {\r\n\t\t\ttimestamp: Date.now(),\r\n\t\t\tsystemHealth,\r\n\t\t\talerts: {\r\n\t\t\t\t...alertStats,\r\n\t\t\t\tactiveAlerts: this.alertService.getActiveAlerts(),\r\n\t\t\t},\r\n\t\t\tperformance: performanceOverview,\r\n\t\t\tmonitoring: monitoringStats,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get metrics by name\r\n\t */\r\n\t@Get('metrics/:name')\r\n\tgetMetrics(\r\n\t\t@Param('name') name: string,\r\n\t\t@Query('since') since?: string,\r\n\t\t@Query('aggregated') aggregated?: string,\r\n\t): any {\r\n\t\tconst sinceTimestamp = since ? Number.parseInt(since) : undefined\r\n\r\n\t\tif (aggregated === 'true' && sinceTimestamp !== undefined) {\r\n\t\t\treturn this.monitoringService.getAggregatedMetrics(name, sinceTimestamp)\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname,\r\n\t\t\tmetrics: this.monitoringService.getMetrics(name, sinceTimestamp),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get all metric names\r\n\t */\r\n\t@Get('metrics')\r\n\tgetMetricNames(): { metrics: string[] } {\r\n\t\treturn {\r\n\t\t\tmetrics: this.monitoringService.getMetricNames(),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get alert rules\r\n\t */\r\n\t@Get('alerts/rules')\r\n\tgetAlertRules(): { rules: AlertRule[] } {\r\n\t\treturn {\r\n\t\t\trules: this.alertService.getAlertRules(),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add or update alert rule\r\n\t */\r\n\t@Post('alerts/rules')\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\taddAlertRule(@Body() rule: AlertRule): { success: boolean, message: string } {\r\n\t\tthis.alertService.addAlertRule(rule)\r\n\t\treturn { success: true, message: 'Alert rule added successfully' }\r\n\t}\r\n\r\n\t/**\r\n\t * Get active alerts\r\n\t */\r\n\t@Get('alerts/active')\r\n\tgetActiveAlerts(): { alerts: Alert[] } {\r\n\t\treturn {\r\n\t\t\talerts: this.alertService.getActiveAlerts(),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get alert history\r\n\t */\r\n\t@Get('alerts/history')\r\n\tgetAlertHistory(@Query('since') since?: string): { alerts: Alert[] } {\r\n\t\tconst sinceTimestamp = since ? Number.parseInt(since) : undefined\r\n\t\treturn {\r\n\t\t\talerts: this.alertService.getAlertHistory(sinceTimestamp),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger manual alert\r\n\t */\r\n\t@Post('alerts/trigger')\r\n\t@HttpCode(HttpStatus.CREATED)\r\n\ttriggerAlert(@Body() alertData: {\r\n\t\truleName: string\r\n\t\tmessage: string\r\n\t\tseverity: AlertSeverity\r\n\t\tmetadata?: Record<string, any>\r\n\t}): { success: boolean, message: string } {\r\n\t\tthis.alertService.triggerAlert(\r\n\t\t\talertData.ruleName,\r\n\t\t\talertData.message,\r\n\t\t\talertData.severity,\r\n\t\t\talertData.metadata,\r\n\t\t)\r\n\t\treturn { success: true, message: 'Alert triggered successfully' }\r\n\t}\r\n\r\n\t/**\r\n\t * Resolve alert\r\n\t */\r\n\t@Post('alerts/:alertId/resolve')\r\n\t@HttpCode(HttpStatus.OK)\r\n\tresolveAlert(@Param('alertId') alertId: string): { success: boolean, message: string } {\r\n\t\tconst resolved = this.alertService.resolveAlert(alertId)\r\n\t\treturn {\r\n\t\t\tsuccess: resolved,\r\n\t\t\tmessage: resolved ? 'Alert resolved successfully' : 'Alert not found or already resolved',\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get performance metrics for an operation\r\n\t */\r\n\t@Get('performance/:operationName')\r\n\tgetPerformanceMetrics(\r\n\t\t@Param('operationName') operationName: string,\r\n\t\t@Query('since') since?: string,\r\n\t\t@Query('stats') stats?: string,\r\n\t): any {\r\n\t\tconst sinceTimestamp = since ? Number.parseInt(since) : undefined\r\n\r\n\t\tif (stats === 'true') {\r\n\t\t\treturn this.performanceService.getPerformanceStats(operationName, sinceTimestamp)\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\toperationName,\r\n\t\t\tmetrics: this.performanceService.getPerformanceMetrics(operationName, sinceTimestamp),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tracked operations\r\n\t */\r\n\t@Get('performance')\r\n\tgetTrackedOperations(): { operations: string[], activeOperations: { operationId: string, operationName: string, startTime: number, duration: number, metadata?: any }[] } {\r\n\t\treturn {\r\n\t\t\toperations: this.performanceService.getTrackedOperations(),\r\n\t\t\tactiveOperations: this.performanceService.getActiveOperations(),\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get performance overview\r\n\t */\r\n\t@Get('performance/overview')\r\n\tgetPerformanceOverview(@Query('since') since?: string): any {\r\n\t\tconst sinceTimestamp = since ? Number.parseInt(since) : undefined\r\n\t\treturn this.performanceService.getPerformanceOverview(sinceTimestamp)\r\n\t}\r\n\r\n\t/**\r\n\t * Get monitoring statistics\r\n\t */\r\n\t@Get('stats')\r\n\tgetMonitoringStats(): any {\r\n\t\treturn {\r\n\t\t\tmonitoring: this.monitoringService.getStats(),\r\n\t\t\talerts: this.alertService.getAlertStats(),\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["Body","Controller","Get","HttpCode","HttpStatus","Param","Post","Query","AlertService","MonitoringService","PerformanceMonitoringService","MonitoringController","monitoringService","alertService","performanceService","getSystemHealth","getDashboard","since","sinceTimestamp","Number","parseInt","Date","now","systemHealth","alertStats","performanceOverview","monitoringStats","Promise","all","getAlertStats","getPerformanceOverview","getStats","timestamp","alerts","activeAlerts","getActiveAlerts","performance","monitoring","getMetrics","name","aggregated","undefined","getAggregatedMetrics","metrics","getMetricNames","getAlertRules","rules","addAlertRule","rule","success","message","getAlertHistory","triggerAlert","alertData","ruleName","severity","metadata","resolveAlert","alertId","resolved","getPerformanceMetrics","operationName","stats","getPerformanceStats","getTrackedOperations","operations","activeOperations","getActiveOperations","getMonitoringStats","CREATED","OK"],"mappings":"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"}