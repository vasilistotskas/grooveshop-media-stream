{"version":3,"sources":["../../../../../src/MediaStream/Monitoring/indicators/system-health.indicator.ts"],"sourcesContent":["import type { HealthIndicatorResult } from '@nestjs/terminus'\r\nimport { BaseHealthIndicator } from '@microservice/Health/base/base-health-indicator'\r\nimport { Injectable } from '@nestjs/common'\r\nimport { MonitoringService } from '../services/monitoring.service'\r\n\r\n@Injectable()\r\nexport class SystemHealthIndicator extends BaseHealthIndicator {\r\n\tconstructor(private readonly monitoringService: MonitoringService) {\r\n\t\tsuper('system')\r\n\t}\r\n\r\n\tprotected async performHealthCheck(): Promise<HealthIndicatorResult> {\r\n\t\ttry {\r\n\t\t\tconst systemHealth = await this.monitoringService.getSystemHealth()\r\n\t\t\tconst isHealthy = systemHealth.status === 'healthy'\r\n\r\n\t\t\tconst details = {\r\n\t\t\t\tstatus: systemHealth.status,\r\n\t\t\t\toverallScore: systemHealth.overallScore,\r\n\t\t\t\tcomponents: systemHealth.components.map(comp => ({\r\n\t\t\t\t\tname: comp.name,\r\n\t\t\t\t\tstatus: comp.status,\r\n\t\t\t\t\tscore: comp.score,\r\n\t\t\t\t\tlastCheck: comp.lastCheck,\r\n\t\t\t\t})),\r\n\t\t\t\ttimestamp: systemHealth.timestamp,\r\n\t\t\t}\r\n\r\n\t\t\tif (!isHealthy) {\r\n\t\t\t\treturn this.createUnhealthyResult('System is not healthy', details)\r\n\t\t\t}\r\n\r\n\t\t\treturn this.createHealthyResult(details)\r\n\t\t}\r\n\t\tcatch (error: unknown) {\r\n\t\t\treturn this.createUnhealthyResult('System health check failed', {\r\n\t\t\t\terror: (error as Error).message,\r\n\t\t\t\ttimestamp: Date.now(),\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get detailed system status\r\n\t */\r\n\tasync getDetailedStatus(): Promise<{\r\n\t\thealthy: boolean\r\n\t\tsystemHealth: any\r\n\t\tmonitoringStats: any\r\n\t}> {\r\n\t\ttry {\r\n\t\t\tconst [systemHealth, monitoringStats] = await Promise.all([\r\n\t\t\t\tthis.monitoringService.getSystemHealth(),\r\n\t\t\t\tthis.monitoringService.getStats(),\r\n\t\t\t])\r\n\r\n\t\t\treturn {\r\n\t\t\t\thealthy: systemHealth.status === 'healthy',\r\n\t\t\t\tsystemHealth,\r\n\t\t\t\tmonitoringStats,\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (error: unknown) {\r\n\t\t\tthis.logger.error(`Failed to get system status: ${(error as Error).message}`, error)\r\n\t\t\treturn {\r\n\t\t\t\thealthy: false,\r\n\t\t\t\tsystemHealth: null,\r\n\t\t\t\tmonitoringStats: null,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get component health details\r\n\t */\r\n\tasync getComponentHealth(componentName: string): Promise<any> {\r\n\t\tconst systemHealth = await this.monitoringService.getSystemHealth()\r\n\t\treturn systemHealth.components.find(comp => comp.name === componentName)\r\n\t}\r\n\r\n\t/**\r\n\t * Get health indicator description\r\n\t */\r\n\tprotected getDescription(): string {\r\n\t\treturn 'Monitors overall system health including memory, disk, network, and cache components'\r\n\t}\r\n}\r\n"],"names":["BaseHealthIndicator","Injectable","MonitoringService","SystemHealthIndicator","performHealthCheck","systemHealth","monitoringService","getSystemHealth","isHealthy","status","details","overallScore","components","map","comp","name","score","lastCheck","timestamp","createUnhealthyResult","createHealthyResult","error","message","Date","now","getDetailedStatus","monitoringStats","Promise","all","getStats","healthy","logger","getComponentHealth","componentName","find","getDescription"],"mappings":";;;;;;;;;AACA,SAASA,mBAAmB,QAAQ,6CAAiD;AACrF,SAASC,UAAU,QAAQ,iBAAgB;AAC3C,SAASC,iBAAiB,QAAQ,oCAAgC;AAGlE,OAAO,MAAMC,8BAA8BH;IAK1C,MAAgBI,qBAAqD;QACpE,IAAI;YACH,MAAMC,eAAe,MAAM,IAAI,CAACC,iBAAiB,CAACC,eAAe;YACjE,MAAMC,YAAYH,aAAaI,MAAM,KAAK;YAE1C,MAAMC,UAAU;gBACfD,QAAQJ,aAAaI,MAAM;gBAC3BE,cAAcN,aAAaM,YAAY;gBACvCC,YAAYP,aAAaO,UAAU,CAACC,GAAG,CAACC,CAAAA,OAAS,CAAA;wBAChDC,MAAMD,KAAKC,IAAI;wBACfN,QAAQK,KAAKL,MAAM;wBACnBO,OAAOF,KAAKE,KAAK;wBACjBC,WAAWH,KAAKG,SAAS;oBAC1B,CAAA;gBACAC,WAAWb,aAAaa,SAAS;YAClC;YAEA,IAAI,CAACV,WAAW;gBACf,OAAO,IAAI,CAACW,qBAAqB,CAAC,yBAAyBT;YAC5D;YAEA,OAAO,IAAI,CAACU,mBAAmB,CAACV;QACjC,EACA,OAAOW,OAAgB;YACtB,OAAO,IAAI,CAACF,qBAAqB,CAAC,8BAA8B;gBAC/DE,OAAO,AAACA,MAAgBC,OAAO;gBAC/BJ,WAAWK,KAAKC,GAAG;YACpB;QACD;IACD;IAEA;;EAEC,GACD,MAAMC,oBAIH;QACF,IAAI;YACH,MAAM,CAACpB,cAAcqB,gBAAgB,GAAG,MAAMC,QAAQC,GAAG,CAAC;gBACzD,IAAI,CAACtB,iBAAiB,CAACC,eAAe;gBACtC,IAAI,CAACD,iBAAiB,CAACuB,QAAQ;aAC/B;YAED,OAAO;gBACNC,SAASzB,aAAaI,MAAM,KAAK;gBACjCJ;gBACAqB;YACD;QACD,EACA,OAAOL,OAAgB;YACtB,IAAI,CAACU,MAAM,CAACV,KAAK,CAAC,CAAC,6BAA6B,EAAE,AAACA,MAAgBC,OAAO,EAAE,EAAED;YAC9E,OAAO;gBACNS,SAAS;gBACTzB,cAAc;gBACdqB,iBAAiB;YAClB;QACD;IACD;IAEA;;EAEC,GACD,MAAMM,mBAAmBC,aAAqB,EAAgB;QAC7D,MAAM5B,eAAe,MAAM,IAAI,CAACC,iBAAiB,CAACC,eAAe;QACjE,OAAOF,aAAaO,UAAU,CAACsB,IAAI,CAACpB,CAAAA,OAAQA,KAAKC,IAAI,KAAKkB;IAC3D;IAEA;;EAEC,GACD,AAAUE,iBAAyB;QAClC,OAAO;IACR;IA9EA,YAAY,AAAiB7B,iBAAoC,CAAE;QAClE,KAAK,CAAC,gBADsBA,oBAAAA;IAE7B;AA6ED"}