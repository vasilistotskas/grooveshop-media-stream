{"version":3,"sources":["../../../../../src/MediaStream/Validation/services/security-checker.service.ts"],"sourcesContent":["import type { ISecurityChecker, SecurityEvent } from '../interfaces/validator.interface'\r\nimport { ConfigService } from '@microservice/Config/config.service'\r\nimport { Injectable, Logger } from '@nestjs/common'\r\n\r\n@Injectable()\r\nexport class SecurityCheckerService implements ISecurityChecker {\r\n\tprivate readonly _logger = new Logger(SecurityCheckerService.name)\r\n\tprivate readonly suspiciousPatterns: RegExp[]\r\n\tprivate readonly securityEvents: SecurityEvent[] = []\r\n\r\n\tconstructor(private readonly _configService: ConfigService) {\r\n\t\tthis.suspiciousPatterns = [\r\n\t\t\t/<script\\b[^>]{0,100}>/i,\r\n\t\t\t/javascript:/i,\r\n\t\t\t/vbscript:/i,\r\n\t\t\t/data:text\\/html/i,\r\n\t\t\t/\\bon\\w{1,20}\\s*=/i,\r\n\r\n\t\t\t/union\\s{1,5}select/i,\r\n\t\t\t/drop\\s{1,5}table/i,\r\n\t\t\t/insert\\s{1,5}into/i,\r\n\t\t\t/delete\\s{1,5}from/i,\r\n\r\n\t\t\t/\\.\\.\\//,\r\n\t\t\t/\\.\\.\\\\/,\r\n\t\t\t/\\.\\.\\\\\\\\/,\r\n\t\t\t/%2e%2e%2f/i,\r\n\t\t\t/%2e%2e%5c/i,\r\n\r\n\t\t\t/;\\s{0,5}rm\\s{1,5}-rf/i,\r\n\t\t\t/;\\s{0,5}cat\\s{1,5}/i,\r\n\t\t\t/;\\s{0,5}ls\\s{1,5}/i,\r\n\t\t\t/\\|\\s{0,5}nc\\s{1,5}/i,\r\n\r\n\t\t\t/<!entity\\b/i,\r\n\t\t\t/<!doctype[^>]{0,100}\\[/i,\r\n\r\n\t\t\t/\\(\\|\\(/,\r\n\t\t\t/\\)\\(\\|/,\r\n\r\n\t\t\t/\\$where\\b/i,\r\n\t\t\t/\\$ne\\b/i,\r\n\t\t\t/\\$gt\\b/i,\r\n\t\t\t/\\$lt\\b/i,\r\n\t\t]\r\n\t}\r\n\r\n\tasync checkForMaliciousContent(input: any): Promise<boolean> {\r\n\t\tif (input === null || input === undefined) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (typeof input === 'string') {\r\n\t\t\treturn this.checkString(input)\r\n\t\t}\r\n\r\n\t\tif (typeof input === 'object') {\r\n\t\t\treturn this.checkObject(input)\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(input)) {\r\n\t\t\tfor (const item of input) {\r\n\t\t\t\tif (await this.checkForMaliciousContent(item)) {\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tprivate checkString(str: string): boolean {\r\n\t\tconst maxLength = this._configService.getOptional('validation.maxStringLength', 10000)\r\n\t\tif (str.length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (str.length > maxLength) {\r\n\t\t\tthis._logger.warn(`Excessively long string detected: ${str.length} characters`)\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tconst maxPatternTestLength = 5000\r\n\t\tconst testStr = str.length > maxPatternTestLength ? str.substring(0, maxPatternTestLength) : str\r\n\r\n\t\tfor (const pattern of this.suspiciousPatterns) {\r\n\t\t\ttry {\r\n\t\t\t\tif (pattern.test(testStr)) {\r\n\t\t\t\t\tthis._logger.warn(`Suspicious pattern detected: ${pattern.source}`)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch {\r\n\t\t\t\tthis._logger.warn(`Pattern matching failed, potential ReDoS attempt: ${pattern.source}`)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.hasHighEntropy(str)) {\r\n\t\t\tthis._logger.warn('High entropy string detected (potential encoded payload)')\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tprivate async checkObject(obj: any): Promise<boolean> {\r\n\t\tconst dangerousKeys = ['__proto__', 'constructor', 'prototype']\r\n\t\tfor (const key of Object.keys(obj)) {\r\n\t\t\tif (dangerousKeys.includes(key)) {\r\n\t\t\t\tthis._logger.warn(`Dangerous object key detected: ${key}`)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\r\n\t\t\tif (await this.checkForMaliciousContent(obj[key])) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getObjectDepth(obj) > 10) {\r\n\t\t\tthis._logger.warn('Excessively deep object detected (potential DoS)')\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tprivate hasHighEntropy(str: string): boolean {\r\n\t\tconst maxLengthForEntropy = 1000\r\n\t\tif (str.length < 20 || str.length > maxLengthForEntropy)\r\n\t\t\treturn false\r\n\r\n\t\tconst sampleStr = str.length > 500 ? str.substring(0, 500) : str\r\n\r\n\t\tconst charCount: { [key: string]: number } = {}\r\n\t\tfor (const char of sampleStr) {\r\n\t\t\tcharCount[char] = (charCount[char] || 0) + 1\r\n\t\t}\r\n\r\n\t\tif (Object.keys(charCount).length > 256) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tlet entropy = 0\r\n\t\tconst length = sampleStr.length\r\n\t\tfor (const count of Object.values(charCount)) {\r\n\t\t\tconst probability = count / length\r\n\t\t\tentropy -= probability * Math.log2(probability)\r\n\t\t}\r\n\r\n\t\treturn entropy > 4.5\r\n\t}\r\n\r\n\tprivate getObjectDepth(obj: any, depth = 0): number {\r\n\t\tif (depth > 20)\r\n\t\t\treturn depth\r\n\r\n\t\tif (obj === null || typeof obj !== 'object') {\r\n\t\t\treturn depth\r\n\t\t}\r\n\r\n\t\tlet maxDepth = depth\r\n\t\tfor (const value of Object.values(obj)) {\r\n\t\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\t\tconst childDepth = this.getObjectDepth(value, depth + 1)\r\n\t\t\t\tmaxDepth = Math.max(maxDepth, childDepth)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn maxDepth\r\n\t}\r\n\r\n\tasync logSecurityEvent(event: SecurityEvent): Promise<void> {\r\n\t\tif (!event.timestamp) {\r\n\t\t\tevent.timestamp = new Date()\r\n\t\t}\r\n\r\n\t\tthis.securityEvents.push(event)\r\n\r\n\t\tthis._logger.warn(`Security event: ${event.type}`, {\r\n\t\t\tsource: event.source,\r\n\t\t\tdetails: event.details,\r\n\t\t\tclientIp: event.clientIp,\r\n\t\t\tuserAgent: event.userAgent,\r\n\t\t\ttimestamp: event.timestamp,\r\n\t\t})\r\n\r\n\t\t// In production, you might want to:\r\n\t\t// - Send to SIEM system\r\n\t\t// - Trigger alerts for critical events\r\n\t\t// - Update threat intelligence feeds\r\n\t\t// - Block suspicious IPs temporarily\r\n\r\n\t\tif (this.securityEvents.length > 1000) {\r\n\t\t\tthis.securityEvents.shift()\r\n\t\t}\r\n\t}\r\n\r\n\tgetSecurityEvents(limit = 100): SecurityEvent[] {\r\n\t\treturn this.securityEvents\r\n\t\t\t.slice(-limit)\r\n\t\t\t.sort((a: any, b: any) => b.timestamp.getTime() - a.timestamp.getTime())\r\n\t}\r\n\r\n\tgetSecurityStats(): {\r\n\t\ttotalEvents: number\r\n\t\teventsByType: { [key: string]: number }\r\n\t\trecentEvents: number\r\n\t} {\r\n\t\tconst now = new Date()\r\n\t\tconst oneHourAgo = new Date(now.getTime() - 60 * 60 * 1000)\r\n\r\n\t\tconst eventsByType: { [key: string]: number } = {}\r\n\t\tlet recentEvents = 0\r\n\r\n\t\tfor (const event of this.securityEvents) {\r\n\t\t\teventsByType[event.type] = (eventsByType[event.type] || 0) + 1\r\n\t\t\tif (event.timestamp && event.timestamp > oneHourAgo) {\r\n\t\t\t\trecentEvents++\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttotalEvents: this.securityEvents.length,\r\n\t\t\teventsByType,\r\n\t\t\trecentEvents,\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["ConfigService","Injectable","Logger","SecurityCheckerService","_configService","_logger","name","securityEvents","suspiciousPatterns","checkForMaliciousContent","input","undefined","checkString","checkObject","Array","isArray","item","str","maxLength","getOptional","length","warn","maxPatternTestLength","testStr","substring","pattern","test","source","hasHighEntropy","obj","dangerousKeys","key","Object","keys","includes","getObjectDepth","maxLengthForEntropy","sampleStr","charCount","char","entropy","count","values","probability","Math","log2","depth","maxDepth","value","childDepth","max","logSecurityEvent","event","timestamp","Date","push","type","details","clientIp","userAgent","shift","getSecurityEvents","limit","slice","sort","a","b","getTime","getSecurityStats","now","oneHourAgo","eventsByType","recentEvents","totalEvents"],"mappings":"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"}