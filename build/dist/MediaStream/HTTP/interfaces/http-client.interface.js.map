{"version":3,"sources":["../../../../../src/MediaStream/HTTP/interfaces/http-client.interface.ts"],"sourcesContent":["import type { AxiosRequestConfig, AxiosResponse } from 'axios'\r\n\r\nexport interface HttpClientOptions {\r\n\t/**\r\n\t * Base URL for all requests\r\n\t */\r\n\tbaseURL?: string\r\n\r\n\t/**\r\n\t * Default timeout in milliseconds\r\n\t */\r\n\ttimeout?: number\r\n\r\n\t/**\r\n\t * Maximum number of retries\r\n\t */\r\n\tmaxRetries?: number\r\n\r\n\t/**\r\n\t * Retry delay in milliseconds (for exponential backoff, this is the base delay)\r\n\t */\r\n\tretryDelay?: number\r\n\r\n\t/**\r\n\t * Maximum retry delay in milliseconds\r\n\t */\r\n\tmaxRetryDelay?: number\r\n\r\n\t/**\r\n\t * HTTP status codes that should trigger a retry\r\n\t */\r\n\tretryStatusCodes?: number[]\r\n\r\n\t/**\r\n\t * Maximum number of concurrent requests\r\n\t */\r\n\tmaxConcurrent?: number\r\n\r\n\t/**\r\n\t * Keep-alive timeout in milliseconds\r\n\t */\r\n\tkeepAliveTimeout?: number\r\n\r\n\t/**\r\n\t * Maximum sockets per host\r\n\t */\r\n\tmaxSockets?: number\r\n\r\n\t/**\r\n\t * Circuit breaker options\r\n\t */\r\n\tcircuitBreaker?: CircuitBreakerOptions\r\n\r\n\t/**\r\n\t * Headers to include in every request\r\n\t */\r\n\theaders?: Record<string, string>\r\n\r\n\t/**\r\n\t * Whether to follow redirects\r\n\t */\r\n\tfollowRedirects?: boolean\r\n\r\n\t/**\r\n\t * Maximum redirects to follow\r\n\t */\r\n\tmaxRedirects?: number\r\n}\r\n\r\nexport interface CircuitBreakerOptions {\r\n\t/**\r\n\t * Failure threshold percentage (0-100)\r\n\t */\r\n\tfailureThreshold: number\r\n\r\n\t/**\r\n\t * Reset timeout in milliseconds\r\n\t */\r\n\tresetTimeout: number\r\n\r\n\t/**\r\n\t * Rolling window in milliseconds\r\n\t */\r\n\trollingWindow: number\r\n\r\n\t/**\r\n\t * Minimum number of requests before tripping\r\n\t */\r\n\tminimumRequests: number\r\n}\r\n\r\nexport interface HttpClientStats {\r\n\t/**\r\n\t * Total number of requests\r\n\t */\r\n\ttotalRequests: number\r\n\r\n\t/**\r\n\t * Number of successful requests\r\n\t */\r\n\tsuccessfulRequests: number\r\n\r\n\t/**\r\n\t * Number of failed requests\r\n\t */\r\n\tfailedRequests: number\r\n\r\n\t/**\r\n\t * Number of retried requests\r\n\t */\r\n\tretriedRequests: number\r\n\r\n\t/**\r\n\t * Average response time in milliseconds\r\n\t */\r\n\taverageResponseTime: number\r\n\r\n\t/**\r\n\t * Circuit breaker state\r\n\t */\r\n\tcircuitBreakerState: 'closed' | 'open' | 'half-open'\r\n\r\n\t/**\r\n\t * Current active requests\r\n\t */\r\n\tactiveRequests: number\r\n\r\n\t/**\r\n\t * Request queue size\r\n\t */\r\n\tqueueSize: number\r\n}\r\n\r\nexport interface IHttpClient {\r\n\t/**\r\n\t * Send a GET request\r\n\t */\r\n\tget: <T = any>(url: string, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a POST request\r\n\t */\r\n\tpost: <T = any>(url: string, data?: any, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a PUT request\r\n\t */\r\n\tput: <T = any>(url: string, data?: any, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a DELETE request\r\n\t */\r\n\tdelete: <T = any>(url: string, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a HEAD request\r\n\t */\r\n\thead: <T = any>(url: string, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a PATCH request\r\n\t */\r\n\tpatch: <T = any>(url: string, data?: any, config?: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Send a request with custom config\r\n\t */\r\n\trequest: <T = any>(config: AxiosRequestConfig) => Promise<AxiosResponse<T>>\r\n\r\n\t/**\r\n\t * Get client statistics\r\n\t */\r\n\tgetStats: () => HttpClientStats\r\n\r\n\t/**\r\n\t * Reset client statistics\r\n\t */\r\n\tresetStats: () => void\r\n\r\n\t/**\r\n\t * Check if the circuit breaker is open\r\n\t */\r\n\tisCircuitOpen: () => boolean\r\n\r\n\t/**\r\n\t * Reset the circuit breaker\r\n\t */\r\n\tresetCircuitBreaker: () => void\r\n}\r\n"],"names":[],"mappings":"AAqIA,WAuDC"}