{"version":3,"sources":["../../../../../src/MediaStream/common/filters/media-stream-exception.filter.ts"],"sourcesContent":["import type { ArgumentsHost, ExceptionFilter } from '@nestjs/common'\r\nimport type { Request, Response } from 'express'\r\nimport { MediaStreamError } from '@microservice/common/errors/media-stream.errors'\r\nimport { CorrelationService } from '@microservice/Correlation/services/correlation.service'\r\nimport { CorrelatedLogger } from '@microservice/Correlation/utils/logger.util'\r\nimport { Catch, HttpException, HttpStatus } from '@nestjs/common'\r\nimport { HttpAdapterHost } from '@nestjs/core'\r\n\r\n/**\r\n * Global exception filter for handling MediaStream errors\r\n * Converts errors to appropriate HTTP responses with structured error information\r\n */\r\n@Catch()\r\nexport class MediaStreamExceptionFilter implements ExceptionFilter {\r\n\tconstructor(\r\n\t\tprivate readonly httpAdapterHost: HttpAdapterHost,\r\n\t\tprivate readonly _correlationService: CorrelationService,\r\n\t) {}\r\n\r\n\tcatch(exception: Error, host: ArgumentsHost): void {\r\n\t\tconst { httpAdapter } = this.httpAdapterHost\r\n\t\tconst ctx = host.switchToHttp()\r\n\t\tconst response = ctx.getResponse<Response>()\r\n\t\tconst request = ctx.getRequest<Request>()\r\n\r\n\t\tlet status: HttpStatus\r\n\t\tlet errorResponse: Record<string, any>\r\n\r\n\t\tif (exception instanceof MediaStreamError) {\r\n\t\t\tstatus = exception.status\r\n\t\t\terrorResponse = this.formatErrorResponse(exception, request)\r\n\t\t\tCorrelatedLogger.error(`MediaStream Error: ${exception.message}`, JSON.stringify(exception.toJSON()), MediaStreamExceptionFilter.name)\r\n\t\t}\r\n\t\telse if (exception instanceof HttpException) {\r\n\t\t\tstatus = exception.getStatus()\r\n\t\t\tconst exceptionResponse = exception.getResponse()\r\n\t\t\tconst message = typeof exceptionResponse === 'object' && 'message' in exceptionResponse\r\n\t\t\t\t? exceptionResponse.message\r\n\t\t\t\t: exception.message\r\n\r\n\t\t\terrorResponse = this.formatErrorResponse({\r\n\t\t\t\tname: exception.name,\r\n\t\t\t\tmessage,\r\n\t\t\t\tstatus,\r\n\t\t\t\tcode: `HTTP_${status}`,\r\n\t\t\t\tcontext: {\r\n\t\t\t\t\tpath: request.url,\r\n\t\t\t\t\tmethod: request.method,\r\n\t\t\t\t},\r\n\t\t\t}, request)\r\n\r\n\t\t\tCorrelatedLogger.error(`HTTP Exception: ${exception.message}`, JSON.stringify(errorResponse), MediaStreamExceptionFilter.name)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstatus = HttpStatus.INTERNAL_SERVER_ERROR\r\n\t\t\terrorResponse = this.formatErrorResponse({\r\n\t\t\t\tname: 'InternalServerError',\r\n\t\t\t\tmessage: 'An unexpected error occurred',\r\n\t\t\t\tstatus,\r\n\t\t\t\tcode: 'INTERNAL_SERVER_ERROR',\r\n\t\t\t\tcontext: {\r\n\t\t\t\t\tpath: request.url,\r\n\t\t\t\t\tmethod: request.method,\r\n\t\t\t\t},\r\n\t\t\t}, request)\r\n\r\n\t\t\tCorrelatedLogger.error(`Unexpected Error: ${exception.message}`, exception.stack || '', MediaStreamExceptionFilter.name)\r\n\t\t}\r\n\r\n\t\thttpAdapter.reply(response, errorResponse, status)\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the error response with consistent structure\r\n\t */\r\n\tprivate formatErrorResponse(\r\n\t\terror: MediaStreamError | Record<string, any>,\r\n\t\trequest: Request,\r\n\t): Record<string, any> {\r\n\t\tconst timestamp = new Date().toISOString()\r\n\t\tconst path = request.url\r\n\t\tconst method = request.method\r\n\t\tconst correlationId = this._correlationService.getCorrelationId()\r\n\r\n\t\tif (error instanceof MediaStreamError) {\r\n\t\t\tconst { stack, ...errorDetails } = error.toJSON()\r\n\t\t\treturn {\r\n\t\t\t\t...errorDetails,\r\n\t\t\t\ttimestamp,\r\n\t\t\t\tpath,\r\n\t\t\t\tmethod,\r\n\t\t\t\tcorrelationId,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tname: error.name,\r\n\t\t\tmessage: (error as Error).message,\r\n\t\t\tcode: (error as any).code,\r\n\t\t\tstatus: error.status,\r\n\t\t\ttimestamp,\r\n\t\t\tpath,\r\n\t\t\tmethod,\r\n\t\t\tcorrelationId,\r\n\t\t\tcontext: error.context || {},\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["MediaStreamError","CorrelationService","CorrelatedLogger","Catch","HttpException","HttpStatus","HttpAdapterHost","MediaStreamExceptionFilter","httpAdapterHost","_correlationService","catch","exception","host","httpAdapter","ctx","switchToHttp","response","getResponse","request","getRequest","status","errorResponse","formatErrorResponse","error","message","JSON","stringify","toJSON","name","getStatus","exceptionResponse","code","context","path","url","method","INTERNAL_SERVER_ERROR","stack","reply","timestamp","Date","toISOString","correlationId","getCorrelationId","errorDetails"],"mappings":"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"}