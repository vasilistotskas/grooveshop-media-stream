{"version":3,"sources":["../../src/main.ts"],"sourcesContent":["import type { NestExpressApplication } from '@nestjs/platform-express'\r\nimport * as process from 'node:process'\r\nimport { ConfigService } from '@microservice/Config/config.service'\r\nimport MediaStreamModule from '@microservice/media-stream.module'\r\nimport { NestFactory } from '@nestjs/core'\r\nimport compression from 'compression'\r\nimport helmet from 'helmet'\r\n\r\n/**\r\n * Bootstrap the NestJS application\r\n * @param exitProcess If true, will call process.exit on error (default in production)\r\n * @returns A promise that resolves when the application is started\r\n */\r\nexport async function bootstrap(exitProcess = true): Promise<void> {\r\n\ttry {\r\n\t\tconst app = await NestFactory.create<NestExpressApplication>(MediaStreamModule)\r\n\t\tconst configService = app.get(ConfigService)\r\n\r\n\t\t// Security headers with Helmet\r\n\t\tapp.use(helmet({\r\n\t\t\tcontentSecurityPolicy: false, // Allow images from any source\r\n\t\t\tcrossOriginResourcePolicy: { policy: 'cross-origin' }, // Allow cross-origin resource sharing\r\n\t\t}))\r\n\r\n\t\t// HTTP Compression (but not for images - they're already compressed)\r\n\t\tapp.use(compression({\r\n\t\t\tlevel: 6, // Balance between speed (1) and compression (9)\r\n\t\t\tthreshold: 1024, // Only compress responses > 1KB\r\n\t\t\tfilter: (req, res) => {\r\n\t\t\t\tconst contentType = res.getHeader('Content-Type')\r\n\t\t\t\t// Don't compress images (already compressed formats)\r\n\t\t\t\tif (contentType && typeof contentType === 'string' && contentType.startsWith('image/')) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\treturn compression.filter(req, res)\r\n\t\t\t},\r\n\t\t}))\r\n\r\n\t\tapp.useStaticAssets('public')\r\n\r\n\t\tconst serverConfig = configService.get('server')\r\n\t\tapp.enableCors({\r\n\t\t\torigin: serverConfig.cors.origin,\r\n\t\t\tmethods: serverConfig.cors.methods,\r\n\t\t\tmaxAge: serverConfig.cors.maxAge,\r\n\t\t})\r\n\r\n\t\tawait app.listen(serverConfig.port, serverConfig.host)\r\n\t\tconsole.warn(`Application is running on: http://${serverConfig.host}:${serverConfig.port}`)\r\n\t}\r\n\tcatch (error: unknown) {\r\n\t\tconsole.error('Failed to start application:', error)\r\n\t\tif (exitProcess) {\r\n\t\t\tprocess.exit(1)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Only run bootstrap if not in test environment\r\nif (process.env.NODE_ENV !== 'test') {\r\n\tvoid (async () => {\r\n\t\ttry {\r\n\t\t\tawait bootstrap(true)\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\tconsole.error('Unhandled error during bootstrap:', error)\r\n\t\t\tprocess.exit(1)\r\n\t\t}\r\n\t})()\r\n}\r\n"],"names":["process","ConfigService","MediaStreamModule","NestFactory","compression","helmet","bootstrap","exitProcess","app","create","configService","get","use","contentSecurityPolicy","crossOriginResourcePolicy","policy","level","threshold","filter","req","res","contentType","getHeader","startsWith","useStaticAssets","serverConfig","enableCors","origin","cors","methods","maxAge","listen","port","host","console","warn","error","exit","env","NODE_ENV"],"mappings":"AACA,YAAYA,aAAa,eAAc;AACvC,SAASC,aAAa,QAAQ,yCAAqC;AACnE,OAAOC,uBAAuB,uCAAmC;AACjE,SAASC,WAAW,QAAQ,eAAc;AAC1C,OAAOC,iBAAiB,cAAa;AACrC,OAAOC,YAAY,SAAQ;AAE3B;;;;CAIC,GACD,OAAO,eAAeC,UAAUC,cAAc,IAAI;IACjD,IAAI;QACH,MAAMC,MAAM,MAAML,YAAYM,MAAM,CAAyBP;QAC7D,MAAMQ,gBAAgBF,IAAIG,GAAG,CAACV;QAE9B,+BAA+B;QAC/BO,IAAII,GAAG,CAACP,OAAO;YACdQ,uBAAuB;YACvBC,2BAA2B;gBAAEC,QAAQ;YAAe;QACrD;QAEA,qEAAqE;QACrEP,IAAII,GAAG,CAACR,YAAY;YACnBY,OAAO;YACPC,WAAW;YACXC,QAAQ,CAACC,KAAKC;gBACb,MAAMC,cAAcD,IAAIE,SAAS,CAAC;gBAClC,qDAAqD;gBACrD,IAAID,eAAe,OAAOA,gBAAgB,YAAYA,YAAYE,UAAU,CAAC,WAAW;oBACvF,OAAO;gBACR;gBACA,OAAOnB,YAAYc,MAAM,CAACC,KAAKC;YAChC;QACD;QAEAZ,IAAIgB,eAAe,CAAC;QAEpB,MAAMC,eAAef,cAAcC,GAAG,CAAC;QACvCH,IAAIkB,UAAU,CAAC;YACdC,QAAQF,aAAaG,IAAI,CAACD,MAAM;YAChCE,SAASJ,aAAaG,IAAI,CAACC,OAAO;YAClCC,QAAQL,aAAaG,IAAI,CAACE,MAAM;QACjC;QAEA,MAAMtB,IAAIuB,MAAM,CAACN,aAAaO,IAAI,EAAEP,aAAaQ,IAAI;QACrDC,QAAQC,IAAI,CAAC,CAAC,kCAAkC,EAAEV,aAAaQ,IAAI,CAAC,CAAC,EAAER,aAAaO,IAAI,EAAE;IAC3F,EACA,OAAOI,OAAgB;QACtBF,QAAQE,KAAK,CAAC,gCAAgCA;QAC9C,IAAI7B,aAAa;YAChBP,QAAQqC,IAAI,CAAC;QACd,OACK;YACJ,MAAMD;QACP;IACD;AACD;AAEA,gDAAgD;AAChD,IAAIpC,QAAQsC,GAAG,CAACC,QAAQ,KAAK,QAAQ;IACpC,KAAK,AAAC,CAAA;QACL,IAAI;YACH,MAAMjC,UAAU;QACjB,EACA,OAAO8B,OAAO;YACbF,QAAQE,KAAK,CAAC,qCAAqCA;YACnDpC,QAAQqC,IAAI,CAAC;QACd;IACD,CAAA;AACD"}