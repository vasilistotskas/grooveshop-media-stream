{"version":3,"sources":["../../../../../src/test/common/errors/media-stream.errors.spec.ts"],"sourcesContent":["import {\n\tDefaultImageFallbackError,\n\tInvalidRequestError,\n\tMediaStreamError,\n\tResourceNotFoundError,\n\tResourceProcessingError,\n\tResourceStreamingError,\n} from '@microservice/common/errors/media-stream.errors'\nimport { HttpStatus } from '@nestjs/common'\nimport { describe, expect, it } from 'vitest'\n\ndescribe('mediaStreamErrors', () => {\n\tdescribe('mediaStreamError', () => {\n\t\tit('should create a base error with default values', () => {\n\t\t\tconst error = new MediaStreamError('Test error')\n\n\t\t\texpect(error).toBeInstanceOf(Error)\n\t\t\texpect(error.name).toBe('MediaStreamError')\n\t\t\texpect(error.message).toBe('Test error')\n\t\t\texpect(error.status).toBe(HttpStatus.INTERNAL_SERVER_ERROR)\n\t\t\texpect(error.code).toBe('MEDIA_STREAM_ERROR')\n\t\t\texpect(error.context).toEqual({})\n\t\t})\n\n\t\tit('should create a base error with custom values', () => {\n\t\t\tconst context = { test: 'value' }\n\t\t\tconst error = new MediaStreamError(\n\t\t\t\t'Custom error',\n\t\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\t\t'CUSTOM_ERROR',\n\t\t\t\tcontext,\n\t\t\t)\n\n\t\t\texpect(error.message).toBe('Custom error')\n\t\t\texpect(error.status).toBe(HttpStatus.BAD_REQUEST)\n\t\t\texpect(error.code).toBe('CUSTOM_ERROR')\n\t\t\texpect(error.context).toBe(context)\n\t\t})\n\n\t\tit('should convert to JSON correctly', () => {\n\t\t\tconst error = new MediaStreamError('Test error')\n\t\t\tconst json = error.toJSON()\n\n\t\t\texpect(json).toHaveProperty('name', 'MediaStreamError')\n\t\t\texpect(json).toHaveProperty('message', 'Test error')\n\t\t\texpect(json).toHaveProperty('status', HttpStatus.INTERNAL_SERVER_ERROR)\n\t\t\texpect(json).toHaveProperty('code', 'MEDIA_STREAM_ERROR')\n\t\t\texpect(json).toHaveProperty('context', {})\n\t\t\texpect(json).toHaveProperty('stack')\n\t\t})\n\t})\n\n\tdescribe('resourceNotFoundError', () => {\n\t\tit('should create a not found error with default values', () => {\n\t\t\tconst error = new ResourceNotFoundError()\n\n\t\t\texpect(error).toBeInstanceOf(MediaStreamError)\n\t\t\texpect(error.name).toBe('ResourceNotFoundError')\n\t\t\texpect(error.message).toBe('Resource not found')\n\t\t\texpect(error.status).toBe(HttpStatus.NOT_FOUND)\n\t\t\texpect(error.code).toBe('RESOURCE_NOT_FOUND')\n\t\t})\n\n\t\tit('should create a not found error with custom message and context', () => {\n\t\t\tconst context = { resourceId: '123' }\n\t\t\tconst error = new ResourceNotFoundError('Custom resource not found', context)\n\n\t\t\texpect(error.message).toBe('Custom resource not found')\n\t\t\texpect(error.context).toBe(context)\n\t\t})\n\t})\n\n\tdescribe('resourceProcessingError', () => {\n\t\tit('should create a processing error with default values', () => {\n\t\t\tconst error = new ResourceProcessingError()\n\n\t\t\texpect(error).toBeInstanceOf(MediaStreamError)\n\t\t\texpect(error.name).toBe('ResourceProcessingError')\n\t\t\texpect(error.message).toBe('Failed to process resource')\n\t\t\texpect(error.status).toBe(HttpStatus.INTERNAL_SERVER_ERROR)\n\t\t\texpect(error.code).toBe('RESOURCE_PROCESSING_ERROR')\n\t\t})\n\t})\n\n\tdescribe('resourceStreamingError', () => {\n\t\tit('should create a streaming error with default values', () => {\n\t\t\tconst error = new ResourceStreamingError()\n\n\t\t\texpect(error).toBeInstanceOf(MediaStreamError)\n\t\t\texpect(error.name).toBe('ResourceStreamingError')\n\t\t\texpect(error.message).toBe('Failed to stream resource')\n\t\t\texpect(error.status).toBe(HttpStatus.INTERNAL_SERVER_ERROR)\n\t\t\texpect(error.code).toBe('RESOURCE_STREAMING_ERROR')\n\t\t})\n\t})\n\n\tdescribe('defaultImageFallbackError', () => {\n\t\tit('should create a fallback error with default values', () => {\n\t\t\tconst error = new DefaultImageFallbackError()\n\n\t\t\texpect(error).toBeInstanceOf(MediaStreamError)\n\t\t\texpect(error.name).toBe('DefaultImageFallbackError')\n\t\t\texpect(error.message).toBe('Failed to serve default image')\n\t\t\texpect(error.status).toBe(HttpStatus.INTERNAL_SERVER_ERROR)\n\t\t\texpect(error.code).toBe('DEFAULT_IMAGE_FALLBACK_ERROR')\n\t\t})\n\t})\n\n\tdescribe('invalidRequestError', () => {\n\t\tit('should create an invalid request error with default values', () => {\n\t\t\tconst error = new InvalidRequestError()\n\n\t\t\texpect(error).toBeInstanceOf(MediaStreamError)\n\t\t\texpect(error.name).toBe('InvalidRequestError')\n\t\t\texpect(error.message).toBe('Invalid request parameters')\n\t\t\texpect(error.status).toBe(HttpStatus.BAD_REQUEST)\n\t\t\texpect(error.code).toBe('INVALID_REQUEST')\n\t\t})\n\t})\n})\n"],"names":["DefaultImageFallbackError","InvalidRequestError","MediaStreamError","ResourceNotFoundError","ResourceProcessingError","ResourceStreamingError","HttpStatus","describe","expect","it","error","toBeInstanceOf","Error","name","toBe","message","status","INTERNAL_SERVER_ERROR","code","context","toEqual","test","BAD_REQUEST","json","toJSON","toHaveProperty","NOT_FOUND","resourceId"],"mappings":"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"}