{"version":3,"sources":["../../../../../src/test/Queue/jobs/store-resource-response-to-file.job.spec.ts"],"sourcesContent":["import type { AxiosResponse } from 'axios'\r\nimport type { Mock } from 'vitest'\r\nimport { open } from 'node:fs/promises'\r\nimport UnableToStoreFetchedResourceException from '@microservice/API/exceptions/unable-to-store-fetched-resource.exception'\r\nimport StoreResourceResponseToFileJob from '@microservice/Queue/jobs/store-resource-response-to-file.job'\r\nimport { Test, TestingModule } from '@nestjs/testing'\nimport { beforeEach, describe, expect, it, vi } from 'vitest'\r\n\r\nvi.mock('node:fs/promises')\r\n\r\ndescribe('storeResourceResponseToFileJob', () => {\r\n\tlet job: StoreResourceResponseToFileJob\r\n\r\n\tbeforeEach(async () => {\r\n\t\tconst module: TestingModule = await Test.createTestingModule({\r\n\t\t\tproviders: [StoreResourceResponseToFileJob],\r\n\t\t}).compile()\r\n\r\n\t\tjob = await module.resolve<StoreResourceResponseToFileJob>(StoreResourceResponseToFileJob)\r\n\t})\r\n\r\n\tdescribe('handle', () => {\r\n\t\tit('should successfully store resource response to file', async () => {\r\n\t\t\tconst mockFileHandle = {\r\n\t\t\t\tcreateWriteStream: vi.fn().mockReturnValue({\r\n\t\t\t\t\ton: vi.fn().mockImplementation((event, callback) => {\r\n\t\t\t\t\t\tif (event === 'finish') {\r\n\t\t\t\t\t\t\tcallback()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\r\n\t\t\tconst mockResponse: Partial<AxiosResponse> = {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tpipe: vi.fn(),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n      ;(open as unknown as Mock).mockResolvedValue(mockFileHandle)\r\n\r\n\t\t\tawait job.handle('test-resource', 'test/path', mockResponse as AxiosResponse)\r\n\r\n\t\t\texpect(open).toHaveBeenCalledWith('test/path', 'w')\r\n\t\t\texpect(mockResponse.data.pipe).toHaveBeenCalledWith(mockFileHandle.createWriteStream())\r\n\t\t})\r\n\r\n\t\tit('should throw UnableToStoreFetchedResourceException when response data is not streamable', async () => {\r\n\t\t\tconst mockResponse: Partial<AxiosResponse> = {\r\n\t\t\t\tdata: null,\r\n\t\t\t}\r\n\r\n\t\t\tawait expect(job.handle('test-resource', 'test/path', mockResponse as AxiosResponse))\r\n\t\t\t\t.rejects\r\n\t\t\t\t.toThrow(UnableToStoreFetchedResourceException)\r\n\t\t})\r\n\r\n\t\tit('should throw UnableToStoreFetchedResourceException when response data has no pipe method', async () => {\r\n\t\t\tconst mockResponse: Partial<AxiosResponse> = {\r\n\t\t\t\tdata: {},\r\n\t\t\t}\r\n\r\n\t\t\tawait expect(job.handle('test-resource', 'test/path', mockResponse as AxiosResponse))\r\n\t\t\t\t.rejects\r\n\t\t\t\t.toThrow(UnableToStoreFetchedResourceException)\r\n\t\t})\r\n\r\n\t\tit('should throw UnableToStoreFetchedResourceException when file stream encounters an error', async () => {\r\n\t\t\tconst mockFileHandle = {\r\n\t\t\t\tcreateWriteStream: vi.fn().mockReturnValue({\r\n\t\t\t\t\ton: vi.fn().mockImplementation((event, callback) => {\r\n\t\t\t\t\t\tif (event === 'error') {\r\n\t\t\t\t\t\t\tcallback(new Error('Stream error'))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\r\n\t\t\tconst mockResponse: Partial<AxiosResponse> = {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tpipe: vi.fn(),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n      ;(open as unknown as Mock).mockResolvedValue(mockFileHandle)\r\n\r\n\t\t\tawait expect(job.handle('test-resource', 'test/path', mockResponse as AxiosResponse))\r\n\t\t\t\t.rejects\r\n\t\t\t\t.toThrow(UnableToStoreFetchedResourceException)\r\n\t\t})\r\n\t})\r\n})\r\n"],"names":["open","UnableToStoreFetchedResourceException","StoreResourceResponseToFileJob","Test","beforeEach","describe","expect","it","vi","mock","job","module","createTestingModule","providers","compile","resolve","mockFileHandle","createWriteStream","fn","mockReturnValue","on","mockImplementation","event","callback","mockResponse","data","pipe","mockResolvedValue","handle","toHaveBeenCalledWith","rejects","toThrow","Error"],"mappings":"AAEA,SAASA,IAAI,QAAQ,mBAAkB;AACvC,OAAOC,2CAA2C,oFAAyE;AAC3H,OAAOC,oCAAoC,yEAA8D;AACzG,SAASC,IAAI,QAAuB,kBAAiB;AACrD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,EAAEC,EAAE,QAAQ,SAAQ;AAE7DA,GAAGC,IAAI,CAAC;AAERJ,SAAS,kCAAkC;IAC1C,IAAIK;IAEJN,WAAW;QACV,MAAMO,SAAwB,MAAMR,KAAKS,mBAAmB,CAAC;YAC5DC,WAAW;gBAACX;aAA+B;QAC5C,GAAGY,OAAO;QAEVJ,MAAM,MAAMC,OAAOI,OAAO,CAAiCb;IAC5D;IAEAG,SAAS,UAAU;QAClBE,GAAG,uDAAuD;YACzD,MAAMS,iBAAiB;gBACtBC,mBAAmBT,GAAGU,EAAE,GAAGC,eAAe,CAAC;oBAC1CC,IAAIZ,GAAGU,EAAE,GAAGG,kBAAkB,CAAC,CAACC,OAAOC;wBACtC,IAAID,UAAU,UAAU;4BACvBC;wBACD;oBACD;gBACD;YACD;YAEA,MAAMC,eAAuC;gBAC5CC,MAAM;oBACLC,MAAMlB,GAAGU,EAAE;gBACZ;YACD;YAEKlB,KAAyB2B,iBAAiB,CAACX;YAEhD,MAAMN,IAAIkB,MAAM,CAAC,iBAAiB,aAAaJ;YAE/ClB,OAAON,MAAM6B,oBAAoB,CAAC,aAAa;YAC/CvB,OAAOkB,aAAaC,IAAI,CAACC,IAAI,EAAEG,oBAAoB,CAACb,eAAeC,iBAAiB;QACrF;QAEAV,GAAG,2FAA2F;YAC7F,MAAMiB,eAAuC;gBAC5CC,MAAM;YACP;YAEA,MAAMnB,OAAOI,IAAIkB,MAAM,CAAC,iBAAiB,aAAaJ,eACpDM,OAAO,CACPC,OAAO,CAAC9B;QACX;QAEAM,GAAG,4FAA4F;YAC9F,MAAMiB,eAAuC;gBAC5CC,MAAM,CAAC;YACR;YAEA,MAAMnB,OAAOI,IAAIkB,MAAM,CAAC,iBAAiB,aAAaJ,eACpDM,OAAO,CACPC,OAAO,CAAC9B;QACX;QAEAM,GAAG,2FAA2F;YAC7F,MAAMS,iBAAiB;gBACtBC,mBAAmBT,GAAGU,EAAE,GAAGC,eAAe,CAAC;oBAC1CC,IAAIZ,GAAGU,EAAE,GAAGG,kBAAkB,CAAC,CAACC,OAAOC;wBACtC,IAAID,UAAU,SAAS;4BACtBC,SAAS,IAAIS,MAAM;wBACpB;oBACD;gBACD;YACD;YAEA,MAAMR,eAAuC;gBAC5CC,MAAM;oBACLC,MAAMlB,GAAGU,EAAE;gBACZ;YACD;YAEKlB,KAAyB2B,iBAAiB,CAACX;YAEhD,MAAMV,OAAOI,IAAIkB,MAAM,CAAC,iBAAiB,aAAaJ,eACpDM,OAAO,CACPC,OAAO,CAAC9B;QACX;IACD;AACD"}