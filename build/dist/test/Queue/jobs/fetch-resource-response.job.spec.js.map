{"version":3,"sources":["../../../../../src/test/Queue/jobs/fetch-resource-response.job.spec.ts"],"sourcesContent":["import CacheImageRequest, { ResizeOptions } from '@microservice/API/dto/cache-image-request.dto'\nimport FetchResourceResponseJob from '@microservice/Queue/jobs/fetch-resource-response.job'\nimport { HttpService } from '@nestjs/axios'\nimport { Test, TestingModule } from '@nestjs/testing'\nimport { AxiosError, AxiosHeaders } from 'axios'\nimport { beforeEach, describe, expect, it, vi } from 'vitest'\n\ndescribe('fetchResourceResponseJob', () => {\n\tlet job: FetchResourceResponseJob\n\tlet httpService: HttpService\n\n\tbeforeEach(async () => {\n\t\tconst module: TestingModule = await Test.createTestingModule({\n\t\t\tproviders: [\n\t\t\t\tFetchResourceResponseJob,\n\t\t\t\t{\n\t\t\t\t\tprovide: HttpService,\n\t\t\t\t\tuseValue: {\n\t\t\t\t\t\taxiosRef: vi.fn(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t}).compile()\n\n\t\tjob = await module.resolve<FetchResourceResponseJob>(FetchResourceResponseJob)\n\t\thttpService = module.get<HttpService>(HttpService)\n\t})\n\n\tdescribe('handle', () => {\n\t\tit('should successfully fetch resource response', async () => {\n\t\t\tconst mockResponse = {\n\t\t\t\tstatus: 200,\n\t\t\t\tstatusText: 'OK',\n\t\t\t\theaders: {},\n\t\t\t\tconfig: {},\n\t\t\t\tdata: {},\n\t\t\t}\n\n\t\t\tconst request = new CacheImageRequest({\n\t\t\t\tresourceTarget: 'http://example.com/image.jpg',\n\t\t\t\tresizeOptions: new ResizeOptions(),\n\t\t\t})\n\n\t\t\tconst mockAxiosRef = vi.fn().mockResolvedValue(mockResponse)\n\t\t\tObject.defineProperty(httpService, 'axiosRef', { value: mockAxiosRef })\n\n\t\t\tconst result = await job.handle(request)\n\n\t\t\texpect(mockAxiosRef).toHaveBeenCalledWith({\n\t\t\t\turl: request.resourceTarget,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tresponseType: 'stream',\n\t\t\t})\n\t\t\texpect(result).toEqual(mockResponse)\n\t\t})\n\n\t\tit('should handle error and return 404 response', async () => {\n\t\t\tconst mockError = new AxiosError('Network error')\n\t\t\tmockError.config = {\n\t\t\t\theaders: new AxiosHeaders(),\n\t\t\t}\n\n\t\t\tconst request = new CacheImageRequest({\n\t\t\t\tresourceTarget: 'http://example.com/image.jpg',\n\t\t\t\tresizeOptions: new ResizeOptions(),\n\t\t\t})\n\n\t\t\tconst mockAxiosRef = vi.fn().mockRejectedValue(mockError)\n\t\t\tObject.defineProperty(httpService, 'axiosRef', { value: mockAxiosRef })\n\n\t\t\tconst result = await job.handle(request)\n\n\t\t\texpect(result).toEqual({\n\t\t\t\tstatus: 404,\n\t\t\t\tstatusText: 'Bad Request',\n\t\t\t\theaders: {},\n\t\t\t\tconfig: mockError.config,\n\t\t\t\tdata: null,\n\t\t\t})\n\t\t})\n\t})\n})\n"],"names":["CacheImageRequest","ResizeOptions","FetchResourceResponseJob","HttpService","Test","AxiosError","AxiosHeaders","beforeEach","describe","expect","it","vi","job","httpService","module","createTestingModule","providers","provide","useValue","axiosRef","fn","compile","resolve","get","mockResponse","status","statusText","headers","config","data","request","resourceTarget","resizeOptions","mockAxiosRef","mockResolvedValue","Object","defineProperty","value","result","handle","toHaveBeenCalledWith","url","method","responseType","toEqual","mockError","mockRejectedValue"],"mappings":"AAAA,OAAOA,qBAAqBC,aAAa,QAAQ,0DAA+C;AAChG,OAAOC,8BAA8B,iEAAsD;AAC3F,SAASC,WAAW,QAAQ,gBAAe;AAC3C,SAASC,IAAI,QAAuB,kBAAiB;AACrD,SAASC,UAAU,EAAEC,YAAY,QAAQ,QAAO;AAChD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,EAAEC,EAAE,QAAQ,SAAQ;AAE7DH,SAAS,4BAA4B;IACpC,IAAII;IACJ,IAAIC;IAEJN,WAAW;QACV,MAAMO,SAAwB,MAAMV,KAAKW,mBAAmB,CAAC;YAC5DC,WAAW;gBACVd;gBACA;oBACCe,SAASd;oBACTe,UAAU;wBACTC,UAAUR,GAAGS,EAAE;oBAChB;gBACD;aACA;QACF,GAAGC,OAAO;QAEVT,MAAM,MAAME,OAAOQ,OAAO,CAA2BpB;QACrDW,cAAcC,OAAOS,GAAG,CAAcpB;IACvC;IAEAK,SAAS,UAAU;QAClBE,GAAG,+CAA+C;YACjD,MAAMc,eAAe;gBACpBC,QAAQ;gBACRC,YAAY;gBACZC,SAAS,CAAC;gBACVC,QAAQ,CAAC;gBACTC,MAAM,CAAC;YACR;YAEA,MAAMC,UAAU,IAAI9B,kBAAkB;gBACrC+B,gBAAgB;gBAChBC,eAAe,IAAI/B;YACpB;YAEA,MAAMgC,eAAetB,GAAGS,EAAE,GAAGc,iBAAiB,CAACV;YAC/CW,OAAOC,cAAc,CAACvB,aAAa,YAAY;gBAAEwB,OAAOJ;YAAa;YAErE,MAAMK,SAAS,MAAM1B,IAAI2B,MAAM,CAACT;YAEhCrB,OAAOwB,cAAcO,oBAAoB,CAAC;gBACzCC,KAAKX,QAAQC,cAAc;gBAC3BW,QAAQ;gBACRC,cAAc;YACf;YACAlC,OAAO6B,QAAQM,OAAO,CAACpB;QACxB;QAEAd,GAAG,+CAA+C;YACjD,MAAMmC,YAAY,IAAIxC,WAAW;YACjCwC,UAAUjB,MAAM,GAAG;gBAClBD,SAAS,IAAIrB;YACd;YAEA,MAAMwB,UAAU,IAAI9B,kBAAkB;gBACrC+B,gBAAgB;gBAChBC,eAAe,IAAI/B;YACpB;YAEA,MAAMgC,eAAetB,GAAGS,EAAE,GAAG0B,iBAAiB,CAACD;YAC/CV,OAAOC,cAAc,CAACvB,aAAa,YAAY;gBAAEwB,OAAOJ;YAAa;YAErE,MAAMK,SAAS,MAAM1B,IAAI2B,MAAM,CAACT;YAEhCrB,OAAO6B,QAAQM,OAAO,CAAC;gBACtBnB,QAAQ;gBACRC,YAAY;gBACZC,SAAS,CAAC;gBACVC,QAAQiB,UAAUjB,MAAM;gBACxBC,MAAM;YACP;QACD;IACD;AACD"}