{"version":3,"sources":["../../../../../src/test/Metrics/middleware/metrics.middleware.spec.ts"],"sourcesContent":["import type { Request, Response } from 'express'\r\nimport type { Mock, MockedObject } from 'vitest'\r\nimport { MetricsMiddleware } from '@microservice/Metrics/middleware/metrics.middleware'\r\nimport { MetricsService } from '@microservice/Metrics/services/metrics.service'\r\nimport { Test, TestingModule } from '@nestjs/testing'\nimport { beforeEach, describe, expect, it, vi } from 'vitest'\r\nimport 'reflect-metadata'\n\r\ndescribe('metricsMiddleware', () => {\r\n\tlet middleware: MetricsMiddleware\r\n\tlet metricsService: MockedObject<MetricsService>\r\n\tlet mockRequest: Partial<Request>\r\n\tlet mockResponse: Partial<Response>\r\n\tlet nextFunction: Mock\r\n\r\n\tbeforeEach(async () => {\r\n\t\tconst mockMetricsService = {\r\n\t\t\tincrementRequestsInFlight: vi.fn(),\r\n\t\t\tdecrementRequestsInFlight: vi.fn(),\r\n\t\t\trecordHttpRequest: vi.fn(),\r\n\t\t\trecordError: vi.fn(),\r\n\t\t}\r\n\r\n\t\tconst module: TestingModule = await Test.createTestingModule({\r\n\t\t\tproviders: [\r\n\t\t\t\tMetricsMiddleware,\r\n\t\t\t\t{\r\n\t\t\t\t\tprovide: MetricsService,\r\n\t\t\t\t\tuseValue: mockMetricsService,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t}).compile()\r\n\r\n\t\tmiddleware = module.get<MetricsMiddleware>(MetricsMiddleware)\r\n\t\tmetricsService = module.get(MetricsService)\r\n\r\n\t\tmockRequest = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: '/test?param=value',\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'user-agent': 'test-agent',\r\n\t\t\t},\r\n\t\t\tget: vi.fn((header: string) => {\r\n\t\t\t\tif (header === 'content-length')\r\n\t\t\t\t\treturn '100'\r\n\t\t\t\tif (header === 'set-cookie')\r\n\t\t\t\t\treturn ['cookie1', 'cookie2']\r\n\t\t\t\treturn undefined\r\n\t\t\t}) as any,\r\n\t\t}\r\n\r\n\t\tmockResponse = {\r\n\t\t\tstatusCode: 200,\r\n\t\t\tend: vi.fn(),\r\n\t\t\ton: vi.fn().mockReturnValue({} as any),\r\n\t\t}\r\n\r\n\t\tnextFunction = vi.fn()\r\n\t})\r\n\r\n\tdescribe('use', () => {\r\n\t\tit('should track request metrics on successful request', async () => {\r\n\t\t\tconst finishCallback = vi.fn()\r\n\r\n\t\t\tmockResponse.on = vi.fn((event: string, callback: (...args: any[]) => any) => {\r\n\t\t\t\tif (event === 'finish') {\r\n\t\t\t\t\tfinishCallback.mockImplementation(callback)\r\n\t\t\t\t}\r\n\t\t\t\treturn {} as any\r\n\t\t\t})\r\n\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t\texpect(nextFunction).toHaveBeenCalledTimes(1)\r\n\r\n\t\t\t// Simulate response finish\r\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 10))\r\n\t\t\tfinishCallback()\r\n\r\n\t\t\texpect(metricsService.recordHttpRequest).toHaveBeenCalledWith(\r\n\t\t\t\t'GET',\r\n\t\t\t\t'/test',\r\n\t\t\t\t200,\r\n\t\t\t\texpect.any(Number),\r\n\t\t\t\t100,\r\n\t\t\t\t0,\r\n\t\t\t)\r\n\t\t\texpect(metricsService.decrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\r\n\t\tit('should handle request without content-length header', () => {\r\n\t\t\tmockRequest.get = vi.fn(() => undefined)\r\n\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t\texpect(nextFunction).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\r\n\t\tit('should track requests in flight', () => {\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t\texpect(nextFunction).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\r\n\t\tit('should normalize route with numeric ID', () => {\r\n\t\t\tmockRequest.url = '/users/123/profile'\r\n\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\r\n\t\tit('should normalize route with UUID', () => {\r\n\t\t\tmockRequest.url = '/users/550e8400-e29b-41d4-a716-446655440000/profile'\r\n\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\r\n\t\tit('should use route path when available', () => {\r\n\t\t\tmockRequest.route = { path: '/api/users/:id' }\r\n\r\n\t\t\tmiddleware.use(mockRequest as Request, mockResponse as Response, nextFunction)\r\n\r\n\t\t\texpect(metricsService.incrementRequestsInFlight).toHaveBeenCalledTimes(1)\r\n\t\t})\r\n\t})\r\n})\r\n"],"names":["MetricsMiddleware","MetricsService","Test","beforeEach","describe","expect","it","vi","middleware","metricsService","mockRequest","mockResponse","nextFunction","mockMetricsService","incrementRequestsInFlight","fn","decrementRequestsInFlight","recordHttpRequest","recordError","module","createTestingModule","providers","provide","useValue","compile","get","method","url","headers","header","undefined","statusCode","end","on","mockReturnValue","finishCallback","event","callback","mockImplementation","use","toHaveBeenCalledTimes","Promise","resolve","setTimeout","toHaveBeenCalledWith","any","Number","route","path"],"mappings":"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"}